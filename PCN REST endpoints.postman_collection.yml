openapi: 3.0.0
info: 
  title: PCN REST endpoints
  description: >-
    REST endpoints for CRUD operations.


    For the pcn dev environment, it is setup to use the authentication token
    configure at server. You don't have to execute the authentication endpoints
    to get authentication token needed for the execution of other endpoints.
  version: 1.0.0
servers:
  - url: '{base_url}'
    variables:
      base_url:
        enum:
          - 'https://pcndev.trekglobal.com/api/v1'
          - 'http://localhost:8080/api/v1'
        default: 'http://localhost:8080/api/v1'
tags:
  - name: Authentication
  - name: Get view schemas
  - name: Resource
  - name: User and Role
  - name: Tenant
  - name: Assets
  - name: Evidence
  - name: Metadata Extraction
  - name: Requirement
  - name: Claim
  - name: Assessment
  - name: Evaluation
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes  
  parameters:
    expand:
      in: query
      name: $expand
      required: false
      schema:
        type: string
      description: expand of parent or child entities
    filter:
      in: query
      name: $filter
      required: false
      schema:
        type: string
      description: query filter
    orderby:
      in: query
      name: $orderby
      required: false
      schema:
        type: string
      description: ordering of query result
    select:
      in: query
      name: $select
      required: false
      schema:
        type: string
      description: comma separated list of properties to be included in the json result object
    top:
      in: query
      name: $top
      required: false
      schema:
        type: integer
        minimum: 0
      description: first n items to return from query result
    skip:
      in: query
      name: $skip
      required: false
      schema:
        type: integer
        minimum: 0
      description: first n items to skip
  schemas:
    ErrorResponse:
      description: Error response from server
      type: object
      properties:
        title:
          type: string
          description: error summary
          example: Save error
        status:
          type: integer
          description: http status code
          example: 500
        detail:
          type: string
          description: error details
          example: Foreign ID 1000005 not found in PCN_Requirement_ID
    Image:
      description: Image entity
      type: object
      properties:
        id: { type: integer, example: 103 }
        uid: { type: string, format: uuid, example: "ba05016b-ec17-4eac-ac7a-d1d30d16bd78" }
        file_name: { type: string, example: "logo.png" }
        data: { type: string, description: "base64 encoded image content" }
    ResourceAccess:
      description: Role access to protected resources
      type: object
      properties:
        uid:
          type: string
          format: uuid
          description: Unique identifier. Auto generate.
          example: 9bb65996-4426-4fe4-b950-c9c891a9dddd
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object          
          properties:
            propertyLabel:
              type: string
              description: Property label
              enum:
                 - 'Client'
            id:
              type: integer
              description: Identifier
              example: 11
            identifier:
              type: string
              description: Identifier
              example: GardenWorld
            model-name:
              type: string
              description: /models/{model-name}
              enum:
                 - 'ad_client'
        role:
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Role'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_role'
        httpMethods:
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'HTTP Methods'
            id:
              type: string
              description: list item id
              enum:
                - 'DELETE'
                - 'GET'
                - 'POST'
                - 'PUT'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Delete'
                - 'Get'
                - 'Post'
                - 'Put'
            model-name:
              type: string
              enum:
                 - 'ad_ref_list'
        resource:
          description: protected REST resource path
          type: object
          properties:
            propertyLabel:
              type: string
              description: Property label
              enum:
                 - 'Rest Resource'
            id:
              type: integer
              description: Identifier
              example: 1000000
            identifier:
              type: string
              description: Identifier
              example: v1/models/ad_roles\\b/?.* | Role Model Resource
            model-name:
              type: string
              description: /models/{model-name}
              enum:
                 - 'rest_resource'
        isActive:
          type: boolean
          description: Active status
          example: true
    Resource:
      description: Protected REST resource path
      type: object
      properties:
        id:
          type: integer
          description: Record identifier. Auto generate.
          example: 1000000
        uid:
          type: string
          format: uuid
          description: Unique identifier. Auto generate.
          example: b69d5fa2-c057-4a50-9a53-b7673f814840
        name:
          type: string
          description: Name
          example: Role Model Resource
        resourcePath:
          type: string
          description: Resource path (regex)
          example: v1/models/ad_roles\\b/?.*
        isActive:
          type: boolean
          description: Active status
          example: true
        model-name:
          type: string
          description: /models/{model-name}
          example: rest_resource
        view-name:
          type: string
          description: /views/{view-name}
          example: resources
        resourceAccess:
          type: array
          items: { $ref: "#/components/schemas/ResourceAccess" }
    Role:
      description: Security role for role based access control
      type: object
      properties:
        id:
          type: integer
          description: Identifier. Auto generate.
          example: 103
        uid:
          type: string
          format: uuid
          description: Unique identifier. Auto generate.
          example: 322f1e23-ee0e-4a21-8ccb-8a674c6c62e2
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel:
              type: string
              description: Property label
              example: Client
            id:
              type: integer
              description: Identifier
              example: 11
            identifier:
              type: string
              description: Identifier
              example: GardenWorld
            model-name:
              type: string
              description: /models/{model-name}
              example: ad_client
        name:
          type: string
          description: Name
          example: GardenWorld User
        description:
          type: string
          description: Description
          example: GardenWorld User
        userLevel:
          type: object
          properties:
            propertyLabel:
              type: string
              description: Property label
              example: User Level
            id:
              type: string 
              description: Identifier
              example: "  O" # " C" (Client), " CO" (Client+Organization), "  O" (Organization) or "S  " (System) 
            identifier:
              type: string
              description: Identifier
              example: Organization
            model-name:
              type: string
              description: /models/{model-name}
              example: ad_ref_list
        isAccessAdvanced:
          type: boolean
          description: Is access advanced?
          example: false
        isActive:
          type: boolean
          description: Active status
          example: true
        model-name:
          type: string
          description: /models/{model-name}
          example: ad_role
        view-name:
          type: string
          description: /views/{view-name}
          example: roles
        resourceAccess:
          type: array
          items: { $ref: "#/components/schemas/ResourceAccess" }
    UserRole:
      description: Role assignment to user
      type: object
      properties:
        uid:
          type: string
          format: uuid
          description: Unique identifier. Auto generate.
          example: 1bf9c8cf-58ae-4af2-8527-07a6ed514690
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel:
              type: string
              enum:
                 - 'Client'
            id:
              type: integer
              description: Identifier
              example: 11
            identifier:
              type: string
              description: Identifier
              example: GardenWorld
            model-name:
              type: string
              description: /models/{model-name}
              enum:
                 - 'ad_client'
        role:
          type: object
          properties:
            propertyLabel:
              type: string
              description: Property label
              enum:
                 - 'Role'
            id:
              type: integer
              description: Identifier
              example: 103
            identifier:
              type: string
              description: Identifier
              example: GardenWorld User
            model-name:
              type: string
              description: /models/{model-name}
              enum:
                 - 'ad_role'
        user:
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'User/Contact'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_user'
        isActive:
          type: boolean
          description: Active status
          example: true
        resourceAccess:
          type: array
          items: { $ref: "#/components/schemas/ResourceAccess" }
    User:
      description: User entity
      type: object
      properties:
        id:
          type: integer
          description: Identifier. Auto generate.
          example: 1000058
        uid:
          type: string
          format: uuid
          description: Unique identifier. Auto generate.
          example: 8cc189ab-586d-45c8-b5aa-569888b5962d
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel:
              type: string
              description: Property label
              enum:
                 - 'Client'
            id:
              type: integer
              description: Identifier
              example: 11
            identifier:
              type: string
              description: Identifier
              example: GardenWorld
            model-name:
              type: string
              description: /models/{model-name}
              enum:
                 - 'ad_client'
        name:
          type: string
          description: Name
          example: First_Name_LastName
        firstName:
          type: string
          description: First name
        middleName:
          type: string
          description: Middle name
        lastName:
          type: string
          description: Last name
        nickName:
          type: string
          description: Nick name
        eMail:
          type: string
          description: Email address
          example: user@gardenworld.com
        description:
          type: string
          description: Description
        gender:
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Gender'
            id:
              type: string
              description: list item id
              enum:
                - 'F'
                - 'M'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Female'
                - 'Male'
            model-name:
              type: string
              enum:
                 - 'ad_ref_list'
        pronouns:
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Pronouns'
            id:
              type: string
              description: list item id
              enum:
                - 'H'
                - 'O'
                - 'N'
                - 'S'
                - 'T'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'He/Him/His'
                - 'Other'
                - 'Prefer not to say'
                - 'She/Her/Hers'
                - 'They/Them/Theirs'
            model-name:
              type: string
              enum:
                 - 'ad_ref_list'
        dateOfBirth:
          type: string
          format: date
          description: Date of birth
          example: 2000-12-25
        preferredContactMethod:
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Preferred Contact Method'
            id:
              type: string
              description: list item id
              enum:
                - 'E'
                - 'P'
                - 'T'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Email'
                - 'Phone Call'
                - 'Text'
            model-name:
              type: string
              enum:
                 - 'ad_ref_list'
        language:
          type: string
          description: language code
          example: en_US
        timeZone:
          type: string
          description: timezone id
        photo: { $ref: "#/components/schemas/Image" }        
        isActive: 
          type: boolean
          example: true
        model-name: 
          type: string
          description: /models/{model-name}
          example: ad_user
        view-name: 
          type: string
          description: /views/{view-name}
          example: users
        password:
          type: string
          description: user password, only included in create user response
        userRoles:
          type: array
          items: { $ref: "#/components/schemas/UserRole" }
    Language:
      type: object
      properties:
        propertyLabel: { type: string, example: "Language" }
        id: { type: string, example: "en_US" }
        identifier: { type: string, example: "English (USA)" }
        model-name: { type: string, example: "ad_language" }
    State:
      description: State or region of a country
      type: object
      properties:
        id: { type: integer, example: 103 }
        identifier: { type: string, example: "CA" }
        view-name: { type: string, example: "states" }
    Country:
      description: Country entity
      type: object
      properties:
        id: { type: integer, example: 100 }
        identifier: { type: string, example: "United States" }
        view-name: { type: string, example: "countries" }
    Address:
      description: Address entity
      type: object
      properties:
        id: { type: integer, example: 1000128 }
        identifier: { type: string, example: "8963 Mclennan Ave, Panorama City, CA 91402" }
        address1: { type: string, example: "8963 Mclennan Ave" }
        address2: { type: string }
        address3: { type: string }
        address4: { type: string }
        postal: { type: string, example: "91402" }
        postal_add: { type: string }
        city: { type: string, example: "Panorama City" }
        state: { $ref: "#/components/schemas/State" }
        country: { $ref: "#/components/schemas/Country" }
    OrganizationInfo:
      description: Organization details
      type: object
      properties:
        id: { type: integer, description: "Record id. Auto generate." }
        uid: { type: string, format: uuid, example: "ba05016b-ec17-4eac-ac7a-d1d30d16bd78", description: "Auto generate." }
        address: { $ref: "#/components/schemas/Address" }
        eMail: { type: string }
        phone: { type: string, example: "123" }
        fax: { type: string }
        timeZone: { type: string }
        website: { type: string }
        logo: { $ref: "#/components/schemas/Image" }
        isActive: { type: boolean, example: true }
    Organization:
      description: Organization entity of a tenant
      type: object
      properties:
        id: { type: integer, description: "Record id. Auto generate." }
        uid: { type: string, format: uuid, example: "b5264c89-138d-47ce-9636-72f36cf88570", description: "Auto generate." }
        value: { type: string, example: "HQ" }
        name: { type: string, example: "HQ" }
        description: { type: string }
        isSummary: { type: boolean, example: false }
        isActive: { type: boolean, example: true }
        organizationInfo:
          type: array
          items: { $ref: "#/components/schemas/OrganizationInfo" }
    Tenant:
      description: Tenant entity
      type: object
      properties:
        id: { type: integer, description: "Record id. Auto generate." }
        uid: { type: string, format: uuid, example: "0eed175a-0af0-4634-89e1-5d25d301d502", description: "Auto generate." }
        value: { type: string, example: "FastCo" }
        name: { type: string, example: "FastCo" }
        language: { $ref: "#/components/schemas/Language" }
        isActive: { type: boolean, example: true }
        model-name: { type: string, example: "ad_client" }
        view-name: { type: string, example: "tenants" }
        organizations:
          description: Organizations of tenant
          type: array
          items: { $ref: "#/components/schemas/Organization" }
    serverTokens:
      description: persistent authorization token stored at server
      type: object
      properties:
        id:
          type: integer
          description: Record id. Auto generate.
        uid:
          type: string
          description: Record uuid. Auto generate
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_client'
        organization:
          description: Organization reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Organization'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_org'
        user:
          description: User reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'User/Contact'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_user'
        role:
          description: Role reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Role'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_role'
        language:
          description: language code
          type: object
          properties:
            propertyLabel: 
              type: string
              enum:
                 - 'Language'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              enum:
                 - 'ad_language'
        name:
          type: string
          description: Alphanumeric identifier of the entity
        token:
          type: string
          description: Authorization token. Auto generate.
        expireInMinutes:
          type: integer
          description: Token expire time in minutes
        expiresAt:
          type: string
          description: Token expire timestamp. Use this or expireInMinutes to set the expire time of token
          example: 2025-01-16T18:59:24Z
        isExpired:
          type: boolean
          description: expire status of token. read only.
        isActive:
          type: boolean
          description: The record is active in the system
    assets:
      description: File assets
      type: object
      properties:
        id:
          type: integer
          description: Record id. Auto generate.
          readOnly: true
        uid:
          type: string
          description: Record uuid. Auto generate.
          readOnly: true
        description:
          type: string
          description: Optional short description of the record
        name:
          type: string
          description: Name of asset, must include file extension.
        extension:
          type: string
          description: File extension. Auto extracted from name.
        md5sum:
          type: string
          description: md5sum calculated from uploaded content.
        resourceType:
          type: object
          description: Value is automatically derived from file extension.
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Asset Resource Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_resourcetype'
        resourceTypeFile:
          type: object
          description: Value is automatically derived from file extension.
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Asset Resource Type File'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_resourcetypefile'
        url:
          type: string
          description: URL to access uploaded content. Auto generate.
        externalUserId:
          type: string
        file:
          type: string
          description: base64 encoded content to store as attachment
        thumbnailURL:
          type: string
        height:
          type: number
        width:
          type: number
        shasum:
          type: string
        shasumalgo:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'SHA Checksum Algorithm'
            id:
              type: string
              description: list item id
              enum:
                - 'SHA-256'
                - 'SHA3-256'
                - 'SHA3-512'
                - 'SHA-512'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'SHA-256'
                - 'SHA3-256'
                - 'SHA3-512'
                - 'SHA-512'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        templates:
          description: metadata extraction templates of the record
          type: array
          items:
            $ref: '#/components/schemas/assetMetadataExtractionTemplates'
        metadata:
          description: metadata of the record
          type: array
          items:
            $ref: '#/components/schemas/assetMetadata'
    assertionTypes:
      description: Type of assertion for evidence
      type: object
      properties:
        id:
          type: integer
          description: Record identifier. Auto generate.
          readOnly: true
        uid:
          type: string
          description: Record uuid. Auto generate.
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        organization:
          description: Organization reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Organization'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_org'
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        isActive:
          type: boolean
          description: The record is active in the system
    evidenceMetadataExtractionTemplates:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        evidence:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evidence'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_evidence'
        template:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplate'
    evidence:
      description: Evidence entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        organization:
          description: Organization reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Organization'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_org'
        assertionType:
          type: object
          description: assertion type of evidence
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertion Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertiontype'
        asset:
          description: file asset of evidence
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Asset'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier (name of asset)
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_asset'
        name:
          type: string
        description:
          type: string
          description: Optional short description of the record
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
        externalUserId:
          type: string
          description: user id reference for external system
        externalId:
          type: string
          description: entity id reference for external system
        externalSubjectId:
          type: string
          description: Identier reference of external subject matter
        data:
          type: string
          description: Json data
        assetHash:
          type: string
          description: asset hash
          readOnly: true
        url:
          type: string
          description: URL of asset. Auto retrieve from asset
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date this record was created. Auto generate
          example: 2025-02-12T12:12:36Z
          readOnly: true
        createdBy:
          description: User created this record. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-02-12T12:12:36Z
          readOnly: true
        updatedBy:
          description: Last updated by. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        extractionTemplates:
          type: array
          items:
            $ref: '#/components/schemas/evidenceMetadataExtractionTemplates'
    featureTypes:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        reference:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Reference'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_reference'
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
    assertionDataTypes:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
        reference:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Reference'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_reference'
    resourceTypeFiles:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        fileExt:
          type: string
        mimeType:
          type: string
    metadataExtractionTemplateTypes:
      description: Metadata extraction template type entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        provider:
          type: object
          description: provider of the record
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'OCR Provider'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'biz_ocrprovider'
        enabled:
          type: boolean
          description: The record is active in the system
    metadataExtractionTemplates:
      description: Metadata extraction template entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        adapterId:
          type: string
          description: An adapter selected for use when analyzing documents
        adapterVersion:
          type: string
          description: adapter version reference for external system
        featureTypes:
          description: comma-separated list of feature types
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Feature Types'
            id:
              type: string
              description: list item id
              enum:
                - 'FORMS'
                - 'LAYOUT'
                - 'QUERIES'
                - 'SIGNATURES'
                - 'TABLES'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Forms'
                - 'Layout'
                - 'Queries'
                - 'Signatures'
                - 'Tables'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        templateType:
          description: template type
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplatetype'
        externalId:
          type: string
          description: Identifier reference of external entity
        queries:
          description: queries of the record
          type: array
          items:
            $ref: '#/components/schemas/metadataExtractionTemplateQueries'
        acceptableFileTypes:
          description: acceptable file types of the record
          type: array
          items:
            $ref: '#/components/schemas/metadataExtractionTemplateTypeFiles'
        assertions:
          description: assertions of the record
          items:
            $ref: '#/components/schemas/metadataExtractionTemplateAssertions'
        assets:
          description: assets of the record
          type: array
          items:
            $ref: '#/components/schemas/assetMetadataExtractionTemplates'
    metadataExtractionTemplateTypeFiles:
      description: Metadata extraction template type file entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        metadataExtractionTemplate:
          description: metadata extraction template
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplate'
        resourceTypeFile:
          description: asset resource type file
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Asset Resource Type File'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_resourcetypefile'
    metadataExtractionTemplateQueries:
      description: Metadata extraction template query entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        metadataExtractionTemplate:
          description: metadata extraction template
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplate'
        text:
          type: string
          description: text of the query record
        alias:
          type: string
          description: alias of the query record
        pages:
          type: string
          description: pages of the query record
    metadataExtractionTemplateAssertions:
      description: Metadata extraction template assertion entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        metadataExtractionTemplate:
          description: metadata extraction template
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplate'
        alias:
          type: string
          description: alias of the assertion record
        expression:
          type: string
          description: expression of the assertion record
        dataType:
          description: assertion data type
          type: object
          properties:
            propertyLabel:
              type: string
              readOnly: true
              enum:
                 - 'Data Type'
            id:
              type: string
              description: list item id
              enum:
                - 'B'
                - 'N'
                - 'S'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Boolean'
                - 'Number'
                - 'String'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
    assetMetadataExtractionTemplates:
      description: Asset template entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        asset:
          description: asset
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Asset'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_asset'
        template:
          description: metadata extraction template
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplate'
    assetMetadata:
      description: Asset metadata entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        key:
          type: string
          description: metadata key of the record
        value:
          type: string
          description: metadata value of the record
        update:
          description: last updated of the record
          type: string
          format: date-time
          example: 2025-04-21T10:38:04Z
        confidence:
          type: number
          description: confidence of the record
    metadataExtractionResults:
      description: Metadata extraction result entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        processInstance:
          description: process instance
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Process Instance'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_pinstance'
        asset:
          description: asset
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Asset'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_asset'
        template:
          description: metadata extraction template
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Metadata Extraction Template'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_metadataextractiontemplate'
        status:
          description: status of the record
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Status'
            id:
              type: string
              description: list item id
              enum:
                - 'CA'
                - 'CO'
                - 'IP'
                - 'PE'
                - 'TE'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Canceled'
                - 'Completed'
                - 'In Progress'
                - 'Pending'
                - 'Terminated'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        created:
          description: result created of the record
          type: string
          format: date-time
          example: 2025-04-21T10:18:03Z
        metadata:
          description: metadata of the record
          type: array
          items:
            $ref: '#/components/schemas/metadataExtractionResultMetadata'
        blocks:
          description: blocks of the record
          type: array
          items:
            $ref: '#/components/schemas/metadataExtractionResultBlocks'
    metadataExtractionResultMetadata:
      description: Metadata of metadata extraction result entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        key:
          type: string
          description: metadata key of the record
        value:
          type: string
          description: metadata value of the record
        confidence:
          type: number
          description: confidence of the record
    metadataExtractionResultBlocks:
      description: Block of metadata extraction result entity
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        blockType:
          type: string
          description: block type of the record
        queryText:
          type: string
          description: text of query block
        queryAlias:
          type: string
          description: alias of query block
        queryAnswer:
          type: string
          description: answer of query block
        page:
          type: integer
          description: page of the record
        text:
          type: string
          description: text of the record
        width:
          type: number
          description: width of bounding box
        height:
          type: number
          description: height of bounding box
        left:
          type: number
          description: left of bounding box
        top:
          type: number
          description: top of bounding box
        confidence:
          type: number
          description: confidence of the record
        alias:
          type: string
          description: alias of assertion block
        expression:
          type: string
          description: expression of assertion block
        booleanValue:
          type: string
          description: boolean value (in string) of assertion block
        numberValue:
          type: number
          description: number value of assertion block
        stringValue:
          type: string
          description: string value of assertion block
    rules:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        requirement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirement'
        name:
          type: string
          description: Alphanumeric identifier of the entity
        externalIssuerId:
          type: string
        description:
          type: string
          description: Optional short description of the record
        assertionType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertion Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertiontype'
        orientation:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Orientation'
            id:
              type: string
              description: list item id
              enum:
                - 'D'
                - 'P'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Descriptive'
                - 'Prescriptive'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        syntax:
          type: string
          description: Syntax that the system can evaluate to a boolean
        reference:
          type: string
          description: Reference for this record
        criteria:
          $ref: '#/components/schemas/rules_criteria'
    rules_criteria:
      type: object
      properties:
        scope:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Criteria Scope'
            id:
              type: string
              description: list item id
              enum:
                - 'A'
                - 'R'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Absolute'
                - 'Relative'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        unitOfMeasurement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Criteria UOM'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_uom'
        timePeriod:
          type: object
          properties: 
            startDate:
              type: string
              format: date
              description: Criteria time period start date
              example: 2025-04-21
            endDate:
              type: string
              format: date
              description: Criteria time period end date
              example: 2025-04-21
    metadataExtractionStatuses:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        reference:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Reference'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_reference'
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
    claimAssertions:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        claim:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claim'
        name:
          type: string
          description: Alphanumeric identifier of the entity
        externalIssuerId:
          type: string
        description:
          type: string
          description: Optional short description of the record
        assertionType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertion Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertiontype'
        orientation:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Orientation'
            id:
              type: string
              description: list item id
              enum:
                - 'D'
                - 'P'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Descriptive'
                - 'Prescriptive'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        syntax:
          type: string
          description: Syntax that the system can evaluate to a boolean
        reference:
          type: string
          description: Reference for this record
        criteria:
          $ref: '#/components/schemas/claimAssertions_criteria'
    claimAssertions_criteria:
      type: object
      properties:
        scope:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Criteria Scope'
            id:
              type: string
              description: list item id
              enum:
                - 'A'
                - 'R'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Absolute'
                - 'Relative'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        unitOfMeasurement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Criteria UOM'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_uom'
        timePeriod:
          type: object
          properties: 
            startDate:
              type: string
              format: date
              description: Criteria time period start date
              example: 2025-02-11
            endDate:
              type: string
              format: date
              description: Criteria time period end date
              example: 2025-02-11
    requirements:
      type: object
      properties:
        id:
          type: integer
          description: record id. auto generate.
          readOnly: true
        uid:
          type: string
          description: record uuid. auto generate.
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        organization:
          description: Organization reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Organization'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_org'
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
        name:
          type: string
          description: Name this entity is referred to as
        description:
          type: string
          description: Optional short description of the record
        externalIssuerId:
          type: string
          description: External issuer id
        requirementCategory:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Category'
            id:
              type: string
              description: list item id
              enum:
                - 'CULTURAL'
                - 'CUSTOM'
                - 'INDUSTRY'
                - 'REGULATORY'
                - 'STANDARD'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Cultural'
                - 'Custom'
                - 'Industry'
                - 'Regulatory'
                - 'Standard'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        parent:
          type: object
          description: parent requirement. optional.
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirement'
        created:
          type: string
          format: date-time
          description: Date this record was created. Auto generate.
          example: 2025-01-24T12:05:36Z
          readOnly: true
        createdBy:
          description: User created this record. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date this record was updated. Auto generate.
          example: 2025-01-24T12:05:36Z
          readOnly: true
        updatedBy:
          description: Last updated by. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/rules'
        childRequirements:
          type: array
          items:
            $ref: '#/components/schemas/requirements'
    requirementGroupLines:
      type: object
      properties:
        id:
          type: integer
          description: record id. auto generate.
          readOnly: true
        uid:
          type: string
          description: record uuid. auto generate.
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        organization:
          description: Organization reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Organization'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_org'
        requirementGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirementgroup'
        line:
          type: integer
          description: Line/Sequence No. Auto generate.
        requirement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirement'
    requirementGroups:
      type: object
      properties:
        id:
          type: integer
          description: record id. auto generate.
          readOnly: true
        uid:
          type: string
          description: record uuid. auto generate.
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        organization:
          description: Organization reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Organization'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_org'
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        externalIssuerId:
          type: string
          description: external issuer id
        requirementCategory:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Category'
            id:
              type: string
              description: list item id
              enum:
                - 'CULTURAL'
                - 'CUSTOM'
                - 'INDUSTRY'
                - 'REGULATORY'
                - 'STANDARD'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Cultural'
                - 'Custom'
                - 'Industry'
                - 'Regulatory'
                - 'Standard'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        isSequenced:
          type: boolean
          description: is group for ordered or non-ordered collection of requirements
        parent:
          type: object
          description: parent requirement group. optional.
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirementgroup'
        created:
          type: string
          format: date-time
          description: Date this record was created. Auto generate.
          example: 2025-01-24T12:07:16Z
          readOnly: true
        createdBy:
          description: User created this record. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date this record was updated. Auto generate.
          example: 2025-01-24T12:07:16Z
          readOnly: true
        updatedBy:
          description: Last updated by. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/requirementGroups'
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/requirementGroupLines'
    claims:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        name:
          type: string
          description: Name this entity is referred to as
        description:
          type: string
          description: Optional short description of the record
        subjectId:
          type: string
        claimSubjectType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Subject Type'
            id:
              type: string
              description: list item id
              enum:
                - 'person'
                - 'place'
                - 'process'
                - 'product'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Person'
                - 'Place'
                - 'Process'
                - 'Product'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        externalIssuerId:
          type: string
          description: External issuer id
        status:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Status'
            id:
              type: string
              description: list item id
              enum:
                - 'ASSERTED'
                - 'ASSESSMENT_MADE'
                - 'BEING_ASSESSED'
                - 'CANCELED'
                - 'INVALIDATED'
                - 'PENDING'
                - 'REQUEST_EVAL'
                - 'TERMINATED'
                - 'VALIDATED'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Asserted'
                - 'Assessment Made'
                - 'Being Assessed'
                - 'Canceled'
                - 'Invalidated'
                - 'Pending'
                - 'Request Evaluation'
                - 'Terminated'
                - 'Validated'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        parentId:
          type: object
          description: parent claim. optional.
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claim'
        dateCreated:
          type: string
          format: date
          example: 2025-02-04
        lastUpdated:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-02-04T15:49:16Z
          readOnly: true
        claimType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Type'
            id:
              type: string
              description: list item id
              enum:
                - 'C'
                - 'CG'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'CLAIM'
                - 'CLAIMGROUP'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          example: 'C'
          readOnly: true
        claimAssertions:
          type: array
          items:
            $ref: '#/components/schemas/claimAssertions'
        evidences:
          type: array
          items:
            $ref: '#/components/schemas/claimEvidence'
        requirementsSatisfied:
          type: array
          items:
            $ref: '#/components/schemas/requirementsSatisfied'
    requirementsSatisfied:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        claim:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claim'
        requirement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirement'
        requirementGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirementgroup'
        requirementType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Type'
            id:
              type: string
              description: list item id
              enum:
                - 'R'
                - 'RG'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'REQUIREMENT'
                - 'REQUIREMENTGROUP'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          example: 'R'
          readOnly: true
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
    claimEvidence:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        claim:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claim'
        evidence:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evidence'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_evidence'
    claimGroups:
      type: object
      properties:
        id:
          type: integer
          description: record id. auto generate.
          readOnly: true
        uid:
          type: string
          description: record uuid. auto generate.
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        externalSubjectId:
          type: string
        subjectType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Subject Type'
            id:
              type: string
              description: list item id
              enum:
                - 'person'
                - 'place'
                - 'process'
                - 'product'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Person'
                - 'Place'
                - 'Process'
                - 'Product'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        externalIssuerId:
          type: string
          description: external issuer id
        isSequenced:
          type: boolean
          description: is group for ordered or non-ordered collection of claims
        status:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Status'
            id:
              type: string
              description: list item id
              enum:
                - 'ASSERTED'
                - 'ASSESSMENT_MADE'
                - 'BEING_ASSESSED'
                - 'CANCELED'
                - 'INVALIDATED'
                - 'PENDING'
                - 'REQUEST_EVAL'
                - 'TERMINATED'
                - 'VALIDATED'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Asserted'
                - 'Assessment Made'
                - 'Being Assessed'
                - 'Canceled'
                - 'Invalidated'
                - 'Pending'
                - 'Request Evaluation'
                - 'Terminated'
                - 'Validated'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        parentId:
          type: object
          description: parent claim group. optional.
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claimgroup'
        dateCreated:
          type: string
          format: date
          example: 2025-02-04
        lastUpdated:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-02-04T15:49:16Z
          readOnly: true
        claimType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Type'
            id:
              type: string
              description: list item id
              enum:
                - 'C'
                - 'CG'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'CLAIM'
                - 'CLAIMGROUP'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          example: 'CG'
          readOnly: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/claimGroups'
        claims:
          type: array
          items:
            $ref: '#/components/schemas/claimGroupLines'
        requirementsSatisfied:
          type: array
          items:
            $ref: '#/components/schemas/groupRequirementsSatisfied'
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/claimGroupEvaluations'
    claimGroupLines:
      type: object
      properties:
        id:
          type: integer
          description: record id. auto generate.
          readOnly: true
        uid:
          type: string
          description: record uuid. auto generate.
          readOnly: true
        tenant:
          description: Tenant reference. Value is automatically retrieved from the authentication context.
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        claimGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claimgroup'
        line:
          type: integer
          description: Line/Sequence No. Auto generate.
        claim:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claim'
    groupRequirementsSatisfied:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        claimGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claimgroup'
        requirement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirement'
        requirementGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirementgroup'
        requirementType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Type'
            id:
              type: string
              description: list item id
              enum:
                - 'R'
                - 'RG'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'REQUIREMENT'
                - 'REQUIREMENTGROUP'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          example: 'R'
          readOnly: true
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
    claimGroupEvaluations:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        claimGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claimgroup'
        evaluation:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_evaluation'
    errorResponse:
      type: object
      properties:
        title:
          type: string
          description: error summary text
        status:
          type: integer
          description: http status
        detail:
          type: string
          description: error detail text
    assessments:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        clientId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-03-19T05:53:21Z
          readOnly: true
        notes:
          type: string
        criteria:
          type: string
        dateAssigned:
          type: string
          format: date
          example: 2025-03-19
        dateCompleted:
          type: string
          format: date
          example: 2025-03-19
        dateStarted:
          type: string
          format: date
          example: 2025-03-19
        resultStatus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation Result Status'
            id:
              type: string
              description: list item id
              enum:
                - 'CORRUPTED'
                - 'INCOMPLETE'
                - 'INCONCLUSIVE'
                - 'INVALIDATED'
                - 'PENDING'
                - 'VALIDATED'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Corrupted'
                - 'Incomplete'
                - 'Inconclusive'
                - 'Invalidated'
                - 'Pending'
                - 'Validated'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        status:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation Status'
            id:
              type: string
              description: list item id
              enum:
                - 'CANCELED'
                - 'COMPLETED'
                - 'INPROCESS'
                - 'PENDING'
                - 'TERMINATED'
                - 'UNASSIGNED'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Canceled'
                - 'Completed'
                - 'In Process'
                - 'Pending'
                - 'Terminated'
                - 'Unassigned'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        externalEvaluatorId:
          type: string
        rule:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Rule Assertion'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertions'
        claimAssertion:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Value Assertion'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertions'
        updated:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-03-19T05:53:21Z
          readOnly: true
        updatedBy:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
    evaluationAssessments:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        assessmentId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assessment'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assessment'
        evaluationId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_evaluation'
    evaluationRequirementsSatisfied:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        evaluation:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_evaluation'
        requirementGroup:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirementgroup'
        requirement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_requirement'
        requirementType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Requirement Type'
            id:
              type: string
              description: list item id
              enum:
                - 'R'
                - 'RG'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'REQUIREMENT'
                - 'REQUIREMENTGROUP'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
    evaluations:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        clientId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        dateCreated:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-03-19T05:55:57Z
          readOnly: true
        description:
          type: string
          description: Optional short description of the record
        name:
          type: string
          description: Alphanumeric identifier of the entity
        notes:
          type: string
        claimId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Claim'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_claim'
        dateAccepted:
          type: string
          format: date
          example: 2025-03-19
        dateCompleted:
          type: string
          format: date
          example: 2025-03-19
        dateStarted:
          type: string
          format: date
          example: 2025-03-19
        evaluationResultStatus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation Result Status'
            id:
              type: string
              description: list item id
              enum:
                - 'CORRUPTED'
                - 'INCOMPLETE'
                - 'INCONCLUSIVE'
                - 'INVALIDATED'
                - 'PENDING'
                - 'VALIDATED'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Corrupted'
                - 'Incomplete'
                - 'Inconclusive'
                - 'Invalidated'
                - 'Pending'
                - 'Validated'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        evaluationStatus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation Status'
            id:
              type: string
              description: list item id
              enum:
                - 'CANCELED'
                - 'COMPLETED'
                - 'INPROCESS'
                - 'PENDING'
                - 'TERMINATED'
                - 'UNASSIGNED'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Canceled'
                - 'Completed'
                - 'In Process'
                - 'Pending'
                - 'Terminated'
                - 'Unassigned'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        externalEvaluatorId:
          type: string
        evaluationAssessments:
          type: array
          items:
            $ref: '#/components/schemas/evaluationAssessments'
        evaluationRequirementsSatisfied:
          type: array
          items:
            $ref: '#/components/schemas/evaluationRequirementsSatisfied'
    consensusSignatories:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        consensus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        externalId:
          type: string
          description: Identifier reference of external entity
        name:
          type: string
          description: Alphanumeric identifier of the entity
        title:
          type: string
          description: Name this entity is referred to as
        dateSigned:
          type: string
          format: date
          example: 2025-03-24
    proposal:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        externalIssuerId:
          type: string
        parentId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_proposal'
        subjectId:
          type: string
        subjectType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Proposal Subject Type'
            id:
              type: string
              description: list item id
              enum:
                - 'CLAIM'
                - 'CLAIMGROUP'
                - 'REQUIREMENT'
                - 'REQUIREMENTGROUP'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Claim'
                - 'Claim Group'
                - 'Requirement'
                - 'Requirement Group'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        subjectVersion:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
        externalReferralId:
          type: string
          description: Identifier reference of external entity
        submittedId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        submittedType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus Type'
            id:
              type: string
              description: list item id
              enum:
                - 'AGREEMENT'
                - 'CONSENSUS'
                - 'CONTRACT'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Agreement'
                - 'Consensus'
                - 'Contract'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          readOnly: true
        submittedVersion:
          type: string
          readOnly: true
        dateAccepted:
          type: string
          format: date
          example: 2025-03-24
        dateRejected:
          type: string
          format: date
          example: 2025-03-24
        expirationDate:
          type: string
          format: date
          example: 2025-03-24
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-03-24T22:52:57Z
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-03-24T22:52:57Z
          readOnly: true
        revisions:
          type: array
          items:
            $ref: '#/components/schemas/proposalRevisions'
    proposalRevisions:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        proposal:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Proposal'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_proposal'
        revisionAssertion:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertions'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertions'
        dateAdopted:
          type: string
          format: date
          example: 2025-03-24
        revisionType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Revision Type'
            id:
              type: string
              description: list item id
              enum:
                - 'CLAIM'
                - 'RULE'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Claim'
                - 'Rule'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          readOnly: true
    consensusRevisions:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        consensus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        revisionAssertion:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertions'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertions'
        revisionType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Revision Type'
            id:
              type: string
              description: list item id
              enum:
                - 'CLAIM'
                - 'RULE'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Claim'
                - 'Rule'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          readOnly: true
        dateAdopted:
          type: string
          format: date
          example: 2025-03-24
    consensus:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        version:
          type: string
          description: Numeric version with the format of Major.Minor.Revision
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        externalSubmitterId:
          type: string
        isValid:
          type: boolean
          description: Element is valid
        consensusType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus Type'
            id:
              type: string
              description: list item id
              enum:
                - 'AGREEMENT'
                - 'CONSENSUS'
                - 'CONTRACT'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Agreement'
                - 'Consensus'
                - 'Contract'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
          readOnly: true
        selectedProposal:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Selected Proposal'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_proposal'
        parentId:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        consensusStatus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus Status'
            id:
              type: string
              description: list item id
              enum:
                - 'CONSENSUS'
                - 'DRAFTING'
                - 'EXPLORATION'
                - 'ISSUE_IDENTIFICATION'
                - 'NEGOTIATION'
                - 'REFINEMENT'
                - 'STAKEHOLDER_ENGAGEMENT'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Consensus'
                - 'Drafting'
                - 'Exploration'
                - 'Issue Identification'
                - 'Negotiation'
                - 'Refinement'
                - 'Stakeholder Engagement'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        dateOfConsent:
          type: string
          format: date
          example: 2025-03-24
        dateCreated:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-03-24T22:52:57Z
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-03-24T22:52:57Z
          readOnly: true
        signatories:
          type: array
          items:
            $ref: '#/components/schemas/consensusSignatories'
        submittedProposals:
          type: array
          items:
            $ref: '#/components/schemas/proposal'
        revisions:
          type: array
          items:
            $ref: '#/components/schemas/consensusRevisions'
    agreementPolicies:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        consensus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        policyType:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Policy Type'
            id:
              type: string
              description: list item id
              enum:
                - 'CANCELATIONS'
                - 'CUSTOM'
                - 'PRIVACY'
                - 'RETURNS'
                - 'TERMS_AND_CONDITIONS'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Cancelations'
                - 'Custom'
                - 'Privacy'
                - 'Returns'
                - 'Terms and conditions'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        name:
          type: string
          description: Alphanumeric identifier of the entity
        policyText:
          type: string
    agreementEvaluations:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        tenant:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Client'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_client'
          readOnly: true
        consensus:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        evaluation:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Evaluation'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_evaluation'
    agreement:
      allOf:
        - $ref: '#/components/schemas/consensus'
        - type: object
          properties:
            requirement:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Requirement'
                id:
                  type: integer
                  description: record id
                identifier:
                  type: string
                  description: record identifier
                model-name:
                  type: string
                  readOnly: true
                  enum:
                     - 'pcn_requirement'
            requirementGroup:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Requirement Group'
                id:
                  type: integer
                  description: record id
                identifier:
                  type: string
                  description: record identifier
                model-name:
                  type: string
                  readOnly: true
                  enum:
                    - 'pcn_requirementgroup'
            requirementType:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Requirement Category'
                id:
                  type: string
                  description: list item id
                  enum:
                    - 'CULTURAL'
                    - 'CUSTOM'
                    - 'INDUSTRY'
                    - 'REGULATORY'
                    - 'STANDARD'
                identifier:
                  type: string
                  description: list item identifier
                  enum:
                    - 'Cultural'
                    - 'Custom'
                    - 'Industry'
                    - 'Regulatory'
                    - 'Standard'
                model-name:
                  type: string
                  readOnly: true
                  enum:
                     - 'ad_ref_list'
            dateEffective:
              type: string
              format: date
              example: 2025-03-25
            dateEffectiveTo:
              type: string
              format: date
              example: 2025-03-25
            isEffective:
              type: boolean
              readOnly: true
            agreementStatus:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Agreement Status'
                id:
                  type: string
                  description: list item id
                  enum:
                    - 'CANCELED'
                    - 'COMPLETED'
                    - 'DRAFT'
                    - 'EXECUTING'
                    - 'PENDING'
                    - 'SIGNED'
                    - 'TERMINATED'
                identifier:
                  type: string
                  description: list item identifier
                  enum:
                    - 'Canceled'
                    - 'Completed'
                    - 'Draft'
                    - 'Executing'
                    - 'Pending'
                    - 'Signed'
                    - 'Terminated'
                model-name:
                  type: string
                  readOnly: true
                  enum:
                     - 'ad_ref_list'
            stage:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Agreement Stage'
                id:
                  type: string
                  description: list item id
                  enum:
                    - 'ACTIVE'
                    - 'AWARDING'
                    - 'CREATED'
                    - 'EXPIRED'
                    - 'OPEN_BIDDING'
                    - 'POST_AWARDED'
                    - 'POST_EXECUTION'
                    - 'PRE_AWARD'
                    - 'PREPARING'
                    - 'RENEWED'
                    - 'TERMINATED'
                    - 'UP_FOR_RENEWAL'
                identifier:
                  type: string
                  description: list item identifier
                  enum:
                    - 'Active'
                    - 'Awarding'
                    - 'Created'
                    - 'Expired'
                    - 'Open bidding'
                    - 'Post awarded'
                    - 'Post execution'
                    - 'Pre award'
                    - 'Preparing'
                    - 'Renewed'
                    - 'Terminated'
                    - 'Up for renewal'
                model-name:
                  type: string
                  readOnly: true
                  enum:
                     - 'ad_ref_list'
            policies:
              type: array
              items:
                $ref: '#/components/schemas/agreementPolicies'
            evaluations:
              type: array
              items:
                $ref: '#/components/schemas/agreementEvaluations'
          
    companyGroups:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
    companySuppliers:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        company:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Business Partner'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        supplier:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Supplier'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
    companyLocations:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        address:
          type: object
          properties:
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_location'
            view-name:
              type: string
              readOnly: true
              enum:
                 - 'companyAddresses'
            address_line_1:
              type: string
              description: Address line 1 for this location
            address_line_2:
              type: string
              description: Address line 2 for this location
            city:
              type: string
              description: Identifies a City
            state_or_province:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Region'
                id:
                  type: integer
                  description: record id
                identifier:
                  type: string
                  description: record identifier
                model-name:
                  type: string
                  readOnly: true
                  enum:
                     - 'c_region'
            postal_code:
              type: string
              description: Postal code
            country:
              type: object
              properties:
                propertyLabel: 
                  type: string
                  readOnly: true
                  enum:
                     - 'Country'
                id:
                  type: integer
                  description: record id
                identifier:
                  type: string
                  description: record identifier
                model-name:
                  type: string
                  readOnly: true
                  enum:
                     - 'c_country'
        phone_number:
          type: string
          description: Identifies a telephone number
        email:
          type: string
          description: Electronic Mail Address
    companies:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        website_url:
          type: string
          description: Full URL address - e.g. http://www.idempiere.org
        parent_company:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Partner Parent'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        duns:
          type: string
          description: Dun & Bradstreet Number
        cage:
          type: string
          description: CAGE Code, is a unique identifier assigned to suppliers to various government or defense agencies, as well as to government agencies themselves and various organizations. CAGE codes provide a standardized method of identifying a given facility at a specif
        unique_entity_id:
          type: string
          description: The new identifier used by us gov
        company_supplier:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Supplier'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        group:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Business Partner Group'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bp_group'
        is_active:
          type: boolean
          description: The record is active in the system
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/companySuppliers'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/companyLocations'
    companyUsers:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        company:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Business Partner'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        email:
          type: string
          description: Electronic Mail Address
        first_name:
          type: string
        last_name:
          type: string
        job_title:
          type: string
          description: Name this entity is referred to as
        auth_user_id:
          type: string
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
    userSearchResults:
      type: object
      properties:
        uid:
          type: string
          description: record uuid
          readOnly: true
        user:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'User/Contact'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
        result_type:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Table'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_table'
        result_id:
          type: string
        search_text:
          type: string
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-09-29T17:31:49Z
          readOnly: true
    launchVehicles:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        category:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Product Category'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'm_product_category'
        uom:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'UOM'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_uom'
        tax_category:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Tax Category'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_taxcategory'
        is_active:
          type: boolean
          description: The record is active in the system
    missionContracts:
      type: object
      properties:
        uid:
          type: string
          description: record uuid
          readOnly: true
        mission:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Project'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_project'
        contract:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_consensus'
        relationship_type:
          type: string
        start_date:
          type: string
          format: date
          example: 2025-09-29
        end_date:
          type: string
          format: date
          example: 2025-09-29
        status:
          type: string
        notes:
          type: string
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-09-29T17:42:37Z
          readOnly: true
        modified_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-09-29T17:42:37Z
          readOnly: true
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
    missionStatuses:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
    missions:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        launch_date:
          type: string
          format: date
          description: The (planned) effective date of this document.
          example: 2025-08-25
        launch_vehicle:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Launch Vehicle'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'm_product'
        status:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Status'
            id:
              type: string
              description: list item id
              enum:
                - 'COMPLETE'
                - 'IN_PROGRESS'
                - 'PENDING'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'COMPLETE'
                - 'IN PROGRESS'
                - 'PENDING'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        company:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Business Partner'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        supplier:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Supplier'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-08-25T22:26:49Z
          readOnly: true
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-08-25T22:26:49Z
          readOnly: true
        prm_revision:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'BOM & Formula'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pp_product_bom'
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        currency:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Currency'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_currency'
        is_active:
          type: boolean
          description: The record is active in the system
        evaluationScores:
          type: array
          items:
            $ref: '#/components/schemas/missionEvaluationScores'
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/missionContracts'
    missionEvaluationScores:
      type: object
      properties:
        uid:
          type: string
          description: record uuid
          readOnly: true
        mission:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Project'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_project'
        evaluation_score:
          type: string
        grade:
          type: string
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        modified_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-09-29T17:35:27Z
          readOnly: true
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-09-29T17:35:27Z
          readOnly: true
    contractTypes:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
    contracts:
      type: object
      properties:
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        number:
          type: string
          description: Document sequence number of the document
        description:
          type: string
          description: Optional short description of the record
        type:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Contract Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_contracttype'
        award_date:
          type: string
          format: date
          example: 2025-09-29
        supplier:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Supplier'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        purchase_order:
          type: string
          description: Transaction Reference Number (Sales Order, Purchase Order) of your Business Partner
        contract_value:
          type: number
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-09-29T17:39:19Z
          readOnly: true
        modified_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-09-29T17:39:19Z
          readOnly: true
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        consensus_type:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Consensus Type'
            id:
              type: string
              description: list item id
              enum:
                - 'AGREEMENT'
                - 'CONSENSUS'
                - 'CONTRACT'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Agreement'
                - 'Consensus'
                - 'Contract'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        is_active:
          type: boolean
          description: The record is active in the system
    criterionRequirements:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
    criterion:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        index:
          type: integer
          description: Method of ordering records; lowest number comes first
        criteria_description:
          type: string
          description: Optional short description of the record
        criterion_category:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertion Type'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertiontype'
        clause_reference:
          type: string
          description: Reference for this record
        condition:
          type: string
          description: Syntax that the system can evaluate to a boolean
        applicable_contract_types:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Contract Types'
            selections: 
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: record id
                  identifier:
                    type: string
                    description: record identifier
                  model-name:
                    type: string
                    readOnly: true
                    enum:
                       - 'pcn_contracttype'
        requirement:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Criteria Mandatory Type'
            id:
              type: string
              description: list item id
              enum:
                - 'CD'
                - 'EI'
                - 'I'
                - 'IA'
                - 'IT'
                - 'MO'
                - 'OI'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'Clause must be cited or described'
                - 'Clause must be explicitly included'
                - 'Clause must be included'
                - 'Clause must be included and applicable'
                - 'Clause must be included and tailored correctly'
                - 'Clause must match sourcing origin'
                - 'One of the documents must be included'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
    criterionCategories:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        index:
          type: integer
          description: Method of ordering records; lowest number comes first
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        modified_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Updated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-08-25T22:43:49Z
          readOnly: true
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-08-25T22:43:49Z
          readOnly: true
        criterion:
          type: array
          items:
            $ref: '#/components/schemas/criterion'
    standardRevisionStatuses:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        value:
          type: string
          description: Search key for the record in the format required - must be unique
        name:
          type: string
          description: Alphanumeric identifier of the entity
        description:
          type: string
          description: Optional short description of the record
    standardRevisions:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        description:
          type: string
          description: Optional short description of the record
        file_name:
          type: string
          description: Name of the local file or URL
        file_url:
          type: string
          description: Full URL address - e.g. http://www.idempiere.org
        status:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Status'
            id:
              type: string
              description: list item id
              enum:
                - 'ACTIVE'
                - 'DRAFT'
                - 'INACTIVE'
                - 'PROCESSING'
            identifier:
              type: string
              description: list item identifier
              enum:
                - 'ACTIVE'
                - 'DRAFT'
                - 'INACTIVE'
                - 'PROCESSING'
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_ref_list'
        version:
          type: integer
          description: Numeric version with the format of Major.Minor.Revision
        standard:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Standard'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_standard'
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-08-25T22:46:57Z
          readOnly: true
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-08-25T22:46:57Z
          readOnly: true
        activated:
          type: string
          format: date-time
          example: 2025-08-25T22:46:57Z
        activated_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Activated By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
        is_archived:
          type: boolean
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
    standards:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        name:
          type: string
          description: Alphanumeric identifier of the entity
        standard_type:
          type: string
        company:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Business Partner'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'c_bpartner'
        created:
          type: string
          format: date-time
          description: Date this record was created
          example: 2025-08-25T22:46:57Z
          readOnly: true
        modified:
          type: string
          format: date-time
          description: Date this record was updated
          example: 2025-08-25T22:46:57Z
          readOnly: true
        is_archived:
          type: boolean
        created_by:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Created By'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'ad_user'
          readOnly: true
        revisions:
          type: array
          items:
            $ref: '#/components/schemas/standardRevisions'
    standardRevisionCriterions:
      type: object
      properties:
        id:
          type: integer
          description: record id
          readOnly: true
        uid:
          type: string
          description: record uuid
          readOnly: true
        standard_revision:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Standard Revision'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_standardrevision'
        criterion:
          type: object
          properties:
            propertyLabel: 
              type: string
              readOnly: true
              enum:
                 - 'Assertions'
            id:
              type: integer
              description: record id
            identifier:
              type: string
              description: record identifier
            model-name:
              type: string
              readOnly: true
              enum:
                 - 'pcn_assertions'
    file_resource:
      type: object
      properties:
        fileName:
          type: string
          description: file name
        sha256:
          type: string
          description: sha 256 hash of file
        file:
          type: string
          description: one of upload id, url or base64 encoded file content
        fileType:
          type: string
          description: type of file
          enum:
            - URL
            - Base64
            - UploadID
    prompt_with_files:
      type: object
      properties:
        prompt:
          type: string
          description: request prompt text
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_resource'
security:
    - bearerAuth: [] # use the same name as above          
paths:
  /auth/tokens:
    post:
      tags:
        - Authentication
      summary: Login for authorization token
      description: >-
        Login with tenant, user name, password and role. The return
        token is use as Authorization request header (Bearer {token}) for
        subsequent api call

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                 userName:
                    type: string
                    description: Username for authentication
                    example: apiuser@pcndev.com
                 password:
                    type: string
                    description: Password for authentication
                    example: "redacted_password"
                 parameters:
                    type: object
                    properties:
                       clientId:
                          type: integer
                          description: Tenant identifier
                          example: 1000000
                       roleId:
                          type: integer
                          description: Role identifier
                          example: 1000000
                       organizationId:
                          type: integer
                          description: Organization identifier
                          example: 0
                       language:
                          type: string
                          description: Language code
                          example: en_US
            examples:            
              localGardenTenant:
                summary: user authentication for localhost GardenWorld tenant.
                value:
                    userName: "GardenAdmin"
                    password: "GardenAdmin"
                    parameters:
                       clientId: 11
                       roleId: 102
                       organizationId: 11
                       language: en_US
              localSystemTenant:
                summary: user authentication for localhost System tenant. For create tenant and create resource api.
                value:
                    userName: "SuperUser"
                    password: "System"
                    parameters:
                       clientId: 0
                       roleId: 0 #Need to change System Administrator role type to null
                       organizationId: 0
                       language: en_US                               
              devPCNTenant:
                summary: user authentication for pcndev PCN tenant.
                value:
                    userName: "rest_client@pcn-test.com"
                    password: ""
                    parameters:
                       clientId: 1000001
                       roleId: 1000076
                       organizationId: 1000001
                       language: en_US
              devSystemTenant:
                summary: user authentication for pcndev System tenant. For create tenant and create resource api.
                value:
                    userName: "apiadmin@pcndev.com"
                    password: ""
                    parameters:
                       clientId: 0
                       roleId: 1000067
                       organizationId: 0
                       language: en_US
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                   userId:
                      type: integer
                      description: User identifier
                      example: 100
                   language:
                      type: string
                      description: Language code (e.g., en_US)
                      example: en_US
                   menuTreeId:
                      type: integer
                      description: Menu tree identifier
                      example: 10
                   token:
                      type: string
                      description: Authentication token (JWT)
                      example: "eyJraWQiOiJpZ..."
                   refresh_token:
                      type: string
                      description: Refresh token (JWT)
                      example: "eyJraWQiOiJpZ..."
              example:
                userId: 100
                language: en_US
                menuTreeId: 10
                token: "eyJraWQiOiJpZ..."
                refresh_token: "eyJraWQiOiJpZ..."
  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh authorization token
      description: >-
        The authorization token expires in 1 hour and the refresh_token expires in 24 hours.
        After the authorization token expires, you can get a new authorization token using the refresh token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token: 
                  type: string
                  description: Refresh token from /auth/tokens or /auth/refresh call
                clientId:
                  type: integer
                  description: clientId from the source /auth/tokens or /auth/refresh call
                userId:
                  type: integer
                  description: userId from the /auth/tokens response
            example:
              refresh_token: 'eyJraWQiOiJpZGVtcG...'
              clientId: 11
              userId: 101
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                      type: string
                      description: Authentication token (JWT)
                      example: "eyJraWQiOiJpZ..."
                  refresh_token:
                      type: string
                      description: Refresh token (JWT)
                      example: "eyJraWQiOiJpZ..."
              example:
                token: "eyJraWQiOiJpZ..."
                refresh_token: "eyJraWQiOiJpZ..."
  /views:
    get:
      tags:
        - Get view schemas
      summary: Get view schema by name
      parameters:
        - name: $filter
          in: query
          schema:
            type: string
          example: name eq '{view name}' #Replace {view name} with REST view definition name, for e.g tenants
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    views:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: View identifier
                            example: 1000000
                          uid:
                            type: string
                            format: uuid
                            description: Unique identifier for the view
                            example: 5066d4da-963d-4cc6-8e95-fafa39ab8987
                          name:
                            type: string
                            description: Name of the view
                            example: tenants
                          tableName:
                            type: string
                            description: Name of the database table
                            example: ad_client
                          whereClause:
                            type: string
                            description: SQL WHERE clause for the view
                            example: AD_Client.IsActive='Y' AND AD_Client.AD_Client_ID=@#AD_Client_ID@
                          columns:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Column identifier
                                  example: 1000030
                                uid:
                                  type: string
                                  format: uuid
                                  description: Unique identifier for the column
                                  example: fe346dce-6a56-4918-a831-247505b48bc2
                                name:
                                  type: string
                                  description: Name of the column
                                  example: value
                                columnName:
                                  type: string
                                  description: Name of the column in the database
                                  example: Value
                                help:
                                  type: string
                                  description: Help text for the column
                                  example: >-
                                    A search key allows you a fast method of finding a
                                    particular record. If you leave the search key empty, the
                                    system automatically creates a numeric number. The document
                                    sequence used for this fallback number is defined in the
                                    "Maintain Sequence" window with the name
                                    "DocumentNo_<TableName>", where TableName is the actual name
                                    of the table (e.g. C_Order).
                          relatedViews:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Related view identifier
                                  example: 1000000
                                uid:
                                  type: string
                                  format: uuid
                                  description: Unique identifier for the related view
                                  example: 1b52d9c1-9669-4fd0-b282-528658af8c9d
                                name:
                                  type: string
                                  description: Name of the related view
                                  example: organizations
                                view:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: View identifier within the related view
                                      example: 1000003
                                    uid:
                                      type: string
                                      format: uuid
                                      description: Unique identifier for the view within the related view
                                      example: cb1bcbd4-0a58-4682-84a0-28797e80261f
                                    name:
                                      type: string
                                      description: Name of the view within the related view
                                      example: organizations
                                autoExpand:
                                  type: boolean
                                  description: Flag indicating if the related view should be auto-expanded
                                  example: true
                  example:
                    views:
                      - id: 1000000
                        uid: 5066d4da-963d-4cc6-8e95-fafa39ab8987
                        name: tenants
                        tableName: ad_client
                        whereClause: AD_Client.IsActive='Y' AND AD_Client.AD_Client_ID=@#AD_Client_ID@
                        columns:
                          - id: 1000030
                            uid: fe346dce-6a56-4918-a831-247505b48bc2
                            name: value
                            columnName: Value
                            help: >-
                              A search key allows you a fast method of finding a particular
                              record. If you leave the search key empty, the system
                              automatically creates a numeric number. The document sequence
                              used for this fallback number is defined in the "Maintain
                              Sequence" window with the name "DocumentNo_<TableName>", where
                              TableName is the actual name of the table (e.g. C_Order).
                          # ... other columns
                        relatedViews:
                          - id: 1000000
                            uid: 1b52d9c1-9669-4fd0-b282-528658af8c9d
                            name: organizations
                            view:
                              id: 1000003
                              uid: cb1bcbd4-0a58-4682-84a0-28797e80261f
                              name: organizations
                            autoExpand: true
  /views/{viewName}/yaml:
    get:
      tags:
        - Get view schemas
      summary: Get view schema by name
      parameters:
        - name: viewName
          in: path
          schema:
            type: string
          required: true
          description: view name
          example: 'users'
      responses:
        '200':
          description: Successful response
          content:
            application/yaml:
              schema:
                type: string
                description: yaml schema of view
  /views/resources:
    post:
      tags:
        - Resource
      summary: Create resource protection record
      description: >-
        Require system administrator role and usually should be created by Rest API developer

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: resource name
                resourcePath:
                  type: string
                  description: regular expression to match one or more resource path
              example:
                name: Role Model Resource
                resourcePath: "v1/models/ad_roles\b/?.*"
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Identifier
                      example: 1000000
                    uid:
                      type: string
                      format: uuid
                      description: Unique identifier
                      example: 691f060b-7a07-4958-b1aa-3bde9cd7944c
                    IsActive:
                      type: boolean
                      description: Active status
                      example: true
                    Name:
                      type: string
                      description: Name
                      example: Role Model Resource
                    REST_ResourcePath:
                      type: string
                      description: REST resource path (regex)
                      example: v1/models/ad_roles\\b/?.*
                    model-name:
                      type: string
                      description: /models/{model-name}
                      example: rest_resource
                  example:
                    id: 1000000
                    uid: 691f060b-7a07-4958-b1aa-3bde9cd7944c
                    IsActive: true
                    Name: Role Model Resource
                    REST_ResourcePath: v1/models/ad_roles\\b/?.*
                    model-name: rest_resource
    get:
      tags:
        - Resource
      summary: Get all protected resources records or records that match the $filter parameter
      parameters:
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json: 
               schema:
                  type: object
                  properties:
                    page-count:
                      type: integer
                      description: Page count
                      example: 1
                    records-size:
                      type: integer
                      description: Number of records per page
                      example: 100
                    skip-records:
                      type: integer
                      description: Number of records skipped
                      example: 0
                    row-count:
                      type: integer
                      description: Total number of rows
                      example: 1
                    array-count:
                      type: integer
                      description: Array count (likely related to nested arrays, but needs clarification)
                      example: 0
                    records:
                      type: array
                      items: { $ref: "#/components/schemas/Resource" }
                  example:
                    page-count: 1
                    records-size: 100
                    skip-records: 0
                    row-count: 1
                    array-count: 0
                    records:
                      - id: 1000000
                        uid: b69d5fa2-c057-4a50-9a53-b7673f814840
                        name: Role Model Resource
                        resourcePath: v1/models/ad_roles\\b/?.*
                        isActive: true
                        model-name: rest_resource
                        view-name: resources
  /views/resources/{id}:
    get:
      tags:
        - Resource
      summary: Get resource by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Resource Id
          example: '{rest_resource_id}'
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/Resource" }
               example:
                 id: 1000000
                 uid: b69d5fa2-c057-4a50-9a53-b7673f814840
                 name: Role Model Resource
                 resourcePath: v1/models/ad_roles\\b/?.*
                 isActive: true
                 model-name: rest_resource
                 view-name: resources
                 resourceAccess:
                   - uid: e5629d21-4476-42c1-bd99-664b98d4b464
                     tenant:
                       propertyLabel: Client
                       id: 11
                       identifier: GardenWorld
                       model-name: ad_client
                     role:
                       propertyLabel: Role
                       id: 102
                       identifier: GardenWorld Admin
                       model-name: ad_role
                     httpMethods:
                       propertyLabel: HTTP Methods
                       id: GET,POST,PUT,DELETE
                       identifier: Get, Post, Put, Delete
                       model-name: ad_ref_list
                     isActive: true
                   - uid: e597e929-c9df-4cfd-a87b-600f0e327e60
                     tenant:
                       propertyLabel: Client
                       id: 11
                       identifier: GardenWorld
                       model-name: ad_client
                     role:
                       propertyLabel: Role
                       id: 103
                       identifier: GardenWorld User
                       model-name: ad_role
                     httpMethods:
                       propertyLabel: HTTP Methods
                       id: GET,POST,PUT,DELETE
                       identifier: Get, Post, Put, Delete
                       model-name: ad_ref_list
                     isActive: true
  /views/resourceAccess:
    get:
      tags:
        - Resource
      summary: Get all resource access records or records that match the $filter parameter
      parameters:
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    page-count:
                      type: integer
                      description: Page count
                      example: 1
                    records-size:
                      type: integer
                      description: Number of records per page
                      example: 100
                    skip-records:
                      type: integer
                      description: Number of records skipped
                      example: 0
                    row-count:
                      type: integer
                      description: Total number of rows
                      example: 2
                    array-count:
                      type: integer
                      description: Array count (likely related to nested arrays, but needs clarification)
                      example: 0
                    records:
                      type: array
                      items: { $ref: "#/components/schemas/ResourceAccess" }                        
                  example:
                    page-count: 1
                    records-size: 100
                    skip-records: 0
                    row-count: 2
                    array-count: 0
                    records:
                      - uid: e5629d21-4476-42c1-bd99-664b98d4b464
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        role:
                          propertyLabel: Role
                          id: 102
                          identifier: GardenWorld Admin
                          model-name: ad_role
                        httpMethods:
                          propertyLabel: HTTP Methods
                          id: GET,POST,PUT,DELETE
                          identifier: Get, Post, Put, Delete
                          model-name: ad_ref_list
                        resource:
                          propertyLabel: Rest Resource
                          id: 1000000
                          identifier: v1/models/ad_roles\\b/?.* | Role Model Resource
                          model-name: rest_resource
                        isActive: true
                        model-name: rest_resource_access
                        view-name: resourceAccess
                      - uid: e597e929-c9df-4cfd-a87b-600f0e327e60
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        role:
                          propertyLabel: Role
                          id: 103
                          identifier: GardenWorld User
                          model-name: ad_role
                        httpMethods:
                          propertyLabel: HTTP Methods
                          id: GET,POST,PUT,DELETE
                          identifier: Get, Post, Put, Delete
                          model-name: ad_ref_list
                        resource:
                          propertyLabel: Rest Resource
                          id: 1000000
                          identifier: v1/models/ad_roles\\b/?.* | Role Model Resource
                          model-name: rest_resource
                        isActive: true
                        model-name: rest_resource_access
                        view-name: resourceAccess
    post:
      tags:
        - Resource
      summary: Add resource access to role
      requestBody:
        content:
          application/json:
            schema:
               type: object
               properties:
                 role:
                   type: integer
                   description: Role identifier (ad_role_id)
                   example: 103
                 resource:
                   type: integer
                   description: Resource identifier (rest_resource_id)
                   example: 1000000
                 httpMethods:
                   type: string
                   description: Comma-separated list of HTTP methods
                   example: GET,POST,PUT,DELETE
               example:
                 role: 103
                 resource: 1000000
                 httpMethods: GET,POST,PUT,DELETE
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/ResourceAccess" }
               example:
                 uid: 9bb65996-4426-4fe4-b950-c9c891a9dddd
                 tenant:
                   propertyLabel: Client
                   id: 11
                   identifier: GardenWorld
                   model-name: ad_client
                 role:
                   propertyLabel: Role
                   id: 103
                   identifier: GardenWorld User
                   model-name: ad_role
                 httpMethods:
                   propertyLabel: HTTP Methods
                   id: GET,POST,PUT,DELETE
                   identifier: Get, Post, Put, Delete
                   model-name: ad_ref_list
                 resource:
                   propertyLabel: Rest Resource
                   id: 1000000
                   identifier: v1/models/ad_roles\\b/?.* | Role Model Resource
                   model-name: rest_resource
                 isActive: true
                 model-name: rest_resource_access
                 view-name: resourceAccess
  /views/resourceAccess/{uid}:
    get:
      tags:
        - Resource
      summary: Get resource access by uid (from GET /views/resourceAccess or GET /views/resources)
      parameters:
        - name: uid
          in: path
          schema:
            type: string
          required: true
          description: Role resource access record UID
          example: '{rest_resource_access_uu}'
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/ResourceAccess" }                  
               example:
                 uid: e5629d21-4476-42c1-bd99-664b98d4b464
                 tenant:
                   propertyLabel: Client
                   id: 11
                   identifier: GardenWorld
                   model-name: ad_client
                 role:
                   propertyLabel: Role
                   id: 102
                   identifier: GardenWorld Admin
                   model-name: ad_role
                 httpMethods:
                   propertyLabel: HTTP Methods
                   id: GET,POST,PUT,DELETE
                   identifier: Get, Post, Put, Delete
                   model-name: ad_ref_list
                 resource:
                   propertyLabel: Rest Resource
                   id: 1000000
                   identifier: v1/models/ad_roles\\b/?.* | Role Model Resource
                   model-name: rest_resource
                 isActive: true
                 model-name: rest_resource_access
                 view-name: resourceAccess
    delete:
      tags:
        - Resource
      summary: Remove resource access from role
      parameters:
        - name: uid
          in: path
          schema:
            type: string
          required: true
          description: Role resource access uid
          example: '{rest_resource_access_uu}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
               example:
                  {
                     "msg": "Deleted"
                  }
  /views/roles/{id}:
    get:
      tags:
        - User and Role
      summary: Get role by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Role id
          example: '{ad_role_id}'
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/Role" }
               example:
                 id: 103
                 uid: 322f1e23-ee0e-4a21-8ccb-8a674c6c62e2
                 tenant:
                   propertyLabel: Client
                   id: 11
                   identifier: GardenWorld
                   model-name: ad_client
                 name: GardenWorld User
                 description: GardenWorld User
                 userLevel:
                   propertyLabel: User Level
                   id: " O"
                   identifier: Organization
                   model-name: ad_ref_list
                 isAccessAdvanced: false
                 isActive: true
                 model-name: ad_role
                 view-name: roles
                 resourceAccess:
                   - uid: 9bb65996-4426-4fe4-b950-c9c891a9dddd
                     tenant:
                       propertyLabel: Client
                       id: 11
                       identifier: GardenWorld
                       model-name: ad_client
                     httpMethods:
                       propertyLabel: HTTP Methods
                       id: GET,POST,PUT,DELETE
                       identifier: Get, Post, Put, Delete
                       model-name: ad_ref_list
                     resource:
                       propertyLabel: Rest Resource
                       id: 1000000
                       identifier: v1/models/ad_roles\\b/?.* | Role Model Resource
                       model-name: rest_resource
                     isActive: true
    put:
      tags:
        - User and Role
      summary: Update role by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
            example:
              isAccessAdvanced: false
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Role Id
          example: '{ad_role_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/Role" }                 
               example:
                 id: 1000091
                 uid: 0f1f79e8-208f-4a37-8270-4a488d225b3a
                 tenant:
                   propertyLabel: Client
                   id: 11
                   identifier: GardenWorld
                   model-name: ad_client
                 name: My Role
                 userLevel:
                   propertyLabel: User Level
                   id: " O"
                   identifier: Organization
                   model-name: ad_ref_list
                 isAccessAdvanced: false
                 isActive: true
                 model-name: ad_role
                 view-name: roles
  /views/users/{id}:
    get:
      tags:
        - User and Role
      summary: Get user by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: User id
          example: '{ad_user_id}'
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/User" }
    put:
      tags:
        - User and Role
      summary: Update user by id
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              updateUserPhoto:
                summary: Update the photo of an user
                value:
                  photo:
                    file_name: photo.png
                    data: '{base64EncodedPhotoData}' # photo content encoded as base64 string
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: User id
          example: '{ad_user_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/User" }
  /pcn/users:
    post:
      tags:
        - User and Role
      summary: Create user record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: First_Name_LastName
              firstName: First_Name
              lastName: LastName
              email: user@test.com
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/User" }
               example:
                 id: 1000057
                 uid: 1dd68e2b-89b1-4a9a-8ea5-05a1319e1a43
                 tenant:
                   propertyLabel: Client
                   id: 11
                   identifier: GardenWorld
                   model-name: ad_client
                 name: First_Name_LastName
                 firstName: First_Name
                 lastName: LastName
                 preferredContactMethod:
                   propertyLabel: Preferred Contact Method
                   id: E
                   identifier: Email
                   model-name: ad_ref_list
                 isActive: true
                 model-name: ad_user
                 view-name: users
                 password: generatedPassword
  /pcn/images/{id}:
    get:
      tags:
        - Tenant
      summary: Get organization logo by image id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Logo image id
          example: '{ad_image_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
                format: binary
  /pcn/users/{id}/password:
    put:
      tags:
        - User and Role
      summary: Change user password by user id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                   type: string
                   description: old password
                newPassword:
                   type: string
                   description: new password
                confirmNewPassword:
                   type: string
                   description: repeat of new password for confirmation
              example:
                oldPassword: 4kvRCwvM1c
                newPassword: 4kvRCwvM1d
                confirmNewPassword: 4kvRCwvM1d
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: User id
          example: '{ad_user_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    msg:
                       type: string
                       description: Message
               example:
                  msg: 'The new password is now valid in: GardenWorld'
  /views/roles:
    post:
      tags:
        - User and Role
      summary: Create role record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
            example:
              name: My Role
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/Role" }                  
               example:
                 id: 1000091
                 uid: 0f1f79e8-208f-4a37-8270-4a488d225b3a
                 tenant:
                   propertyLabel: Client
                   id: 11
                   identifier: GardenWorld
                   model-name: ad_client
                 name: My Role
                 userLevel:
                   propertyLabel: User Level
                   id: "  O"
                   identifier: Organization
                   model-name: ad_ref_list
                 isAccessAdvanced: true
                 isActive: true
                 model-name: ad_role
                 view-name: roles
    get:
      tags:
        - User and Role
      summary: Get all role records or role records that match the $filter criteria parameter
      parameters:
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    page-count:
                      type: integer
                      description: Page count
                      example: 1
                    records-size:
                      type: integer
                      description: Number of records per page
                      example: 100
                    skip-records:
                      type: integer
                      description: Number of records skipped
                      example: 0
                    row-count:
                      type: integer
                      description: Total number of rows
                      example: 10
                    array-count:
                      type: integer
                      description: Array count
                      example: 0
                    records:
                      type: array
                      items: { $ref: "#/components/schemas/Role" }
                  example:
                    page-count: 1
                    records-size: 100
                    skip-records: 0
                    row-count: 10
                    array-count: 0
                    records:
                      - id: 103
                        uid: 322f1e23-ee0e-4a21-8ccb-8a674c6c62e2
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        name: GardenWorld User
                        description: GardenWorld User
                        userLevel:
                          propertyLabel: User Level
                          id: " O"
                          identifier: Organization
                          model-name: ad_ref_list
                        isAccessAdvanced: false
                        isActive: true
                        model-name: ad_role
                        view-name: roles
                      - id: 50004
                        uid: d9507a38-d669-4ea2-8e26-51c16614b934
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        name: Web Service Execution
                        roleType:
                          propertyLabel: Role Type
                          id: WS
                          identifier: WebService
                          model-name: ad_ref_list
                        userLevel:
                          propertyLabel: User Level
                          id: " CO"
                          identifier: Client+Organization
                          model-name: ad_ref_list
                        isAccessAdvanced: false
                        isActive: true
                        model-name: ad_role
                        view-name: roles
                      - id: 102
                        uid: 66ad18b5-262f-42fe-bf02-e868ef0fdb2b
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        name: GardenWorld Admin
                        description: GardenWorld Admin
                        userLevel:
                          propertyLabel: User Level
                          id: " CO"
                          identifier: Client+Organization
                          model-name: ad_ref_list
                        isAccessAdvanced: true
                        isActive: true
                        model-name: ad_role
                        view-name: roles
                      - id: 1000055
                        uid: 65256515-2127-4751-90c9-7af4bfb492e5
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        name: My Role
                        userLevel:
                          propertyLabel: User Level
                          id: " O"
                          identifier: Organization
                          model-name: ad_ref_list
                        isAccessAdvanced: false
                        isActive: true
                        model-name: ad_role
                        view-name: roles
                      - id: 1000058
                        uid: 523ee6d6-e125-4982-9c2a-bc0d98d17a03
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        name: My Role
                        userLevel:
                          propertyLabel: User Level
                          id: " O"
                          identifier: Organization
                          model-name: ad_ref_list
                        isAccessAdvanced: false
                        isActive: true
                        model-name: ad_role
                        view-name: roles
                      - id: 1000091
                        uid: 0f1f79e8-208f-4a37-8270-4a488d225b3a
                        tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                        name: My Role
                        userLevel:
                          propertyLabel: User Level
                          id: " O"
                          identifier: Organization
                          model-name: ad_ref_list
                        isAccessAdvanced: true
                        isActive: true
                        model-name: ad_role
                        view-name: roles
  /views/users:
    get:
      tags:
        - User and Role
      summary: Get all user records or user record that match the $filter criteria parameter
      parameters:
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    page-count:
                      type: integer
                      example: 1
                    records-size:
                      type: integer
                      example: 100
                    skip-records:
                      type: integer
                      example: 0
                    row-count:
                      type: integer
                      example: 7
                    array-count:
                      type: integer
                      example: 0
                    records:
                      type: array
                      items: { $ref: "#/components/schemas/User" }                                                           
               example:
                  page-count: 1
                  records-size: 100
                  skip-records: 0
                  row-count: 7
                  array-count: 0
                  records:
                    - id: 102
                      uid: eb6dee9e-b7ef-4d40-bd7e-c2c3ecd9d79c
                      tenant:
                        propertyLabel: Client
                        id: 11
                        identifier: GardenWorld
                        model-name: ad_client
                      name: GardenUser
                      eMail: user@gardenworld.com
                      description: GardenUser
                      isActive: true
                      model-name: ad_user
                      view-name: users
                      userRoles:
                        - uid: 1bf9c8cf-58ae-4af2-8527-07a6ed514690
                          tenant:
                            propertyLabel: Client
                            id: 11
                            identifier: GardenWorld
                            model-name: ad_client
                          role:
                            propertyLabel: Role
                            id: 103
                            identifier: GardenWorld User
                            model-name: ad_role
                          isActive: true
                          resourceAccess:
                            - uid: 9bb65996-4426-4fe4-b950-c9c891a9dddd
                              tenant:
                                propertyLabel: Client
                                id: 11
                                identifier: GardenWorld
                                model-name: ad_client
                              httpMethods:
                                propertyLabel: HTTP Methods
                                id: GET,POST,PUT,DELETE
                                identifier: Get, Post, Put, Delete
                                model-name: ad_ref_list
                              resource:
                                propertyLabel: Rest Resource
                                id: 1000000
                                identifier: v1/models/ad_roles\b/?.* | Role Model Resource
                                model-name: rest_resource
                              isActive: true
                    - id: 103
                      uid: 0386f06b-ef43-4208-b6b2-535956ac83de
                      tenant:
                        propertyLabel: Client
                        id: 11
                        identifier: GardenWorld
                        model-name: ad_client
                      name: Joe Sales
                      isActive: true
                      model-name: ad_user
                      view-name: users
                    - id: 105
                      uid: 5348c319-f4c2-4303-b41b-ab3653bac0b4
                      tenant:
                        propertyLabel: Client
                        id: 11
                        identifier: GardenWorld
                        model-name: ad_client
                      name: Henry Seed
                      isActive: true
                      model-name: ad_user
                      view-name: users
                    - id: 50001
                      uid: e904b07d-e23b-4494-8bff-066efc7cae83
                      tenant:
                        propertyLabel: Client
                        id: 11
                        identifier: GardenWorld
                        model-name: ad_client
                      name: WebService
                      eMail: webservice@gardenworld.com
                      isActive: true
                      model-name: ad_user
                      view-name: users
                      userRoles:
                        - uid: 8f246aed-d8da-421a-bd4d-73c4c258ab85
                          tenant:
                            propertyLabel: Client
                            id: 11
                            identifier: GardenWorld
                            model-name: ad_client
                          role:
                            propertyLabel: Role
                            id: 50004
                            identifier: Web Service Execution
                            model-name: ad_role
                          isActive: true                    
  /views/userRoles:
    get:
      tags:
        - User and Role
      summary: Get all user role assignment records or records that match the $filter criteria parameter
      description: >-
        $filter is use to specific user id filter.
      parameters:
        - name: $filter
          in: query
          schema:
            type: string
            default: ad_user_id eq {ad_user_id}
          description: User id filter          
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    page-count:
                      type: integer
                      example: 1
                    records-size:
                      type: integer
                      example: 100
                    skip-records:
                      type: integer
                      example: 0
                    row-count:
                      type: integer
                      example: 1
                    array-count:
                      type: integer
                      example: 0
                    records:
                      type: array
                      items: { $ref: "#/components/schemas/UserRole" }                        
               example:
                  page-count: 1
                  records-size: 100
                  skip-records: 0
                  row-count: 1
                  array-count: 0
                  records:
                  - uid: 1bf9c8cf-58ae-4af2-8527-07a6ed514690
                    tenant:
                      propertyLabel: Client
                      id: 11
                      identifier: GardenWorld
                      model-name: ad_client
                    role:
                      propertyLabel: Role
                      id: 103
                      identifier: GardenWorld User
                      model-name: ad_role
                    user:
                      propertyLabel: User/Contact
                      id: 102
                      identifier: GardenUser
                      model-name: ad_user
                    isActive: true
                    model-name: ad_user_roles
                    view-name: userRoles
    post:
      tags:
        - User and Role
      summary: Add role to user
      requestBody:
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/UserRole'
            examples: 
              usingId:
                 value:
                   user: 1000000
                   role: 1000000
              usingIdentifier:
                 value:
                   user: 
                     identifier: '{userName}'
                   role: 
                     identifier: '{roleName}'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/UserRole" }
               example:
                  uid: 9481d382-9727-4b52-a160-ec14ce32cd9e
                  tenant:
                    propertyLabel: Client
                    id: 11
                    identifier: GardenWorld
                    model-name: ad_client
                  role:
                    propertyLabel: Role
                    id: 1000091
                    identifier: My Role
                    model-name: ad_role
                  user:
                    propertyLabel: User/Contact
                    id: 1000043
                    identifier: First_Name_LastName
                    model-name: ad_user
                  isActive: true
                  model-name: ad_user_roles
                  view-name: userRoles
  /views/userRoles/{uid}:
    delete:
      tags:
        - User and Role
      summary: Remove role from user
      parameters:
        - name: uid
          in: path
          schema:
            type: string
          required: true
          description: userRoles uid from GET /views/userRoles o GET /views/users
          example: '{ad_user_roles_uu}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                     msg:
                        type: string
                        description: info or error message
               example:
                  msg: "Deleted"
  /pcn/users/serverToken:
    post:
      tags:
        - User and Role
      summary: Create persistent authorization token 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serverTokens'
            example:
              name: 30 Day Token
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema:
                  $ref: '#/components/schemas/serverTokens'
               example:
                  id: 1000007
                  uid: "b41b64e2-a717-47df-85c2-231a789c4227"
                  tenant:
                    propertyLabel: Client
                    id: 11
                    identifier: GardenWorld
                    model-name: ad_client
                  organization:
                    propertyLabel: Organization
                    id: 11
                    identifier: HQ
                    model-name: ad_org
                  user:
                    propertyLabel: User/Contact
                    id: 101
                    identifier: GardenAdmin
                    model-name: ad_user
                  role:
                    propertyLabel: Role
                    id: 102
                    identifier: GardenWorld Admin
                    model-name: ad_role
                  language:
                    propertyLabel: Language
                    id: en_US
                    identifier: English (USA)
                    model-name: ad_language
                  name: "30 Day Token"
                  token: "eyJraWQiOiJp..."
                  expireInMinutes: 43200
                  expiresAt: "2025-02-01T15:18:31Z"
                  isExpired: false
                  isActive: true
                  model-name: rest_authtoken
                  view-name: serverTokens
    put:
      tags:
        - User and Role
      summary: Activate/De-activate server authentication token
      description: >-
        Activate/deactivate server authentication token for current
        authenticated user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: persistent server authorization token to activate/de-activate
                active:
                  type: boolean
                  description: activate/de-activate token
              example:
                token: '{serverToken}'
                active: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                     msg:
                        type: string
                        description: info or error message
               example:
                  msg: "De-activated server authentication token for user"
  /pcn/tenants:
    post:
      tags:
        - Tenant
      summary: Create new tenant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantName:
                  type: string
                  description: tenant name
                organization:
                  type: object
                  properties:
                    name:
                      type: string
                      description: organization name
                    address:
                      $ref: '#/components/schemas/Address'
                    phone:
                      type: string
                    email:
                      type: string
                      description: contact email for organization
                    timezone:
                      type: string
                      description: timezone id
                    website:
                      type: string
                      description: website URL
                administrator:
                  type: object
                  properties:
                    name: 
                      type: string
                      description: administrator user name
                    email:
                      type: string
                      description: administrator user email
                initialUser:
                  type: object
                  properties:
                    name: 
                      type: string
                      description: user name
                    email:
                      type: string
                      description: user email
              example:
                tenantName: FastCo
                organization:
                  name: HQ
                  phone: '123'
                  email: ''
                  timezone: ''
                  website: ''
                  address:
                    address1: 8963 Mclennan Ave
                    address2: ''
                    address3: ''
                    address4: ''
                    city: Panorama City
                    postal: '91402'
                    postal_add: ''
                    state: CA
                administrator:
                  name: FastCo Admin
                  email: fastcoadmin@test.com
                initialUser:
                  name: FastCo User
                  email: fastcouser@test.com
      responses:
        '201':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                    id:
                      type: integer
                    uid:
                      type: string
                    value:
                      type: string
                    name:
                      type: string
                    language:
                      type: object
                      properties:
                        propertyLabel:
                          type: string
                        id:
                          type: string
                        identifier:
                          type: string
                        model-name:
                          type: string
                    isActive:
                      type: boolean
                    model-name:
                      type: string
                    view-name:
                      type: string
                    organizations:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          uid:
                            type: string
                          value:
                            type: string
                          name:
                            type: string
                          isSummary:
                            type: boolean
                          isActive:
                            type: boolean
                          organizationInfo:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                uid:
                                  type: string
                                address:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    identifier:
                                      type: string
                                    address1:
                                      type: string
                                    postal:
                                      type: string
                                    city:
                                      type: string
                                    state:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                        identifier:
                                          type: string
                                        view-name:
                                          type: string
                                    country:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                        identifier:
                                          type: string
                                        view-name:
                                          type: string
                                phone:
                                  type: string
                                isActive:
                                  type: boolean
                    administrator:
                      type: object
                      properties:
                        id:
                          type: integer
                        uid:
                          type: string
                        tenant:
                          type: object
                          properties:
                            propertyLabel:
                              type: string
                            id:
                              type: integer
                            identifier:
                              type: string
                            model-name:
                              type: string
                        name:
                          type: string
                        eMail:
                          type: string
                        description:
                          type: string
                        preferredContactMethod:
                          type: object
                          properties:
                            propertyLabel:
                              type: string
                            id:
                              type: string
                            identifier:
                              type: string
                            model-name:
                              type: string
                        isActive:
                          type: boolean
                        model-name:
                          type: string
                        view-name:
                          type: string
                        userRoles:
                          type: array
                          items:
                            type: object
                            properties:
                              uid:
                                type: string
                              tenant:
                                type: object
                                properties:
                                  propertyLabel:
                                    type: string
                                  id:
                                    type: integer
                                  identifier:
                                    type: string
                                  model-name:
                                    type: string
                              role:
                                type: object
                                properties:
                                  propertyLabel:
                                    type: string
                                  id:
                                    type: integer
                                  identifier:
                                    type: string
                                  model-name:
                                    type: string
                              isActive:
                                type: boolean
                        password:
                          type: string
                    initialUser:
                      type: object
                      properties:
                        id:
                          type: integer
                        uid:
                          type: string
                        tenant:
                          type: object
                          properties:
                            propertyLabel:
                              type: string
                            id:
                              type: integer
                            identifier:
                              type: string
                            model-name:
                              type: string
                        name:
                          type: string
                        eMail:
                          type: string
                        description:
                          type: string
                        preferredContactMethod:
                          type: object
                          properties:
                            propertyLabel:
                              type: string
                            id:
                              type: string
                            identifier:
                              type: string
                            model-name:
                              type: string
                        isActive:
                          type: boolean
                        model-name:
                          type: string
                        view-name:
                          type: string
                        userRoles:
                          type: array
                          items:
                            type: object
                            properties:
                              uid:
                                type: string
                              tenant:
                                type: object
                                properties:
                                  propertyLabel:
                                    type: string
                                  id:
                                    type: integer
                                  identifier:
                                    type: string
                                  model-name:
                                    type: string
                              role:
                                type: object
                                properties:
                                  propertyLabel:
                                    type: string
                                  id:
                                    type: integer
                                  identifier:
                                    type: string
                                  model-name:
                                    type: string
                              isActive:
                                type: boolean
                        password:
                          type: string
               example:
                  id: 1000021
                  uid: 0eed175a-0af0-4634-89e1-5d25d301d502
                  value: FastCo
                  name: FastCo
                  language:
                    propertyLabel: Language
                    id: en_US
                    identifier: English (USA)
                    model-name: ad_language
                  isActive: true
                  model-name: ad_client
                  view-name: tenants
                  organizations:
                    - id: 1000021
                      uid: b5264c89-138d-47ce-9636-72f36cf88570
                      value: HQ
                      name: HQ
                      isSummary: false
                      isActive: true
                      organizationInfo:
                        - id: 1000021
                          uid: ba05016b-ec17-4eac-ac7a-d1d30d16bd78
                          address:
                            id: 1000128
                            identifier: 8963 Mclennan Ave, Panorama City, CA 91402
                            address1: 8963 Mclennan Ave
                            postal: 91402
                            city: Panorama City
                            state:
                              id: 103
                              identifier: CA
                              view-name: states
                            country:
                              id: 100
                              identifier: United States
                              view-name: countries
                          phone: "123"
                          isActive: true
                  administrator:
                    id: 1000069
                    uid: 1c5097b9-4c8f-4777-9bfe-fb6925518766
                    tenant:
                      propertyLabel: Client
                      id: 1000021
                      identifier: FastCo
                      model-name: ad_client
                    name: FastCo Admin
                    eMail: fastcoadmin@test.com
                    description: FastCo Admin
                    preferredContactMethod:
                      propertyLabel: Preferred Contact Method
                      id: E
                      identifier: Email
                      model-name: ad_ref_list
                    isActive: true
                    model-name: ad_user
                    view-name: users
                    userRoles:
                      - uid: 64742a5f-2443-40ee-af77-f4f09d0b74f2
                        tenant:
                          propertyLabel: Client
                          id: 1000021
                          identifier: FastCo
                          model-name: ad_client
                        role:
                          propertyLabel: Role
                          id: 1000104
                          identifier: FastCo Admin
                          model-name: ad_role
                        isActive: true
                      - uid: fc0d2c67-2849-4276-9d52-a2802430c7ff
                        tenant:
                          propertyLabel: Client
                          id: 1000021
                          identifier: FastCo
                          model-name: ad_client
                        role:
                          propertyLabel: Role
                          id: 1000105
                          identifier: FastCo User
                          model-name: ad_role
                        isActive: true
                    password: cqCruLtY0J
                  initialUser:
                    id: 1000070
                    uid: ae33b385-df46-4048-9e56-b17590d97e65
                    tenant:
                      propertyLabel: Client
                      id: 1000021
                      identifier: FastCo
                      model-name: ad_client
                    name: FastCo User
                    eMail: fastcouser@test.com
                    description: FastCo User
                    preferredContactMethod:
                      propertyLabel: Preferred Contact Method
                      id: E
                      identifier: Email
                      model-name: ad_ref_list
                    isActive: true
                    model-name: ad_user
                    view-name: users
                    userRoles:
                      - uid: 91e7097d-a915-4cc9-9e6e-cf9d27a0ef3c
                        tenant:
                          propertyLabel: Client
                          id: 1000021
                          identifier: FastCo
                          model-name: ad_client
                        role:
                          propertyLabel: Role
                          id: 1000105
                          identifier: FastCo User
                          model-name: ad_role
                        isActive: true
                    password: NWGx44ShBv
  /pcn/tenants/{id}:
    get:
      tags:
        - Tenant
      summary: Get tenant by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: '{ad_client_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/Tenant" }
               example:
                  id: 1000021
                  uid: "0eed175a-0af0-4634-89e1-5d25d301d502"
                  value: FastCo
                  name: FastCo
                  language:
                    propertyLabel: Language
                    id: en_US
                    identifier: English (USA)
                    model-name: ad_language
                  isActive: true
                  model-name: ad_client
                  view-name: tenants
                  organizations:
                  - id: 1000021
                    uid: "b5264c89-138d-47ce-9636-72f36cf88570"
                    value: HQ
                    name: HQ
                    isSummary: false
                    isActive: true
                    organizationInfo:
                    - id: 1000021
                      uid: "ba05016b-ec17-4eac-ac7a-d1d30d16bd78"
                      address:
                        id: 1000128
                        identifier: "8963 Mclennan Ave, Panorama City, CA 91402"
                        address1: "8963 Mclennan Ave"
                        postal: "91402"
                        city: Panorama City
                        state:
                          id: 103
                          identifier: CA
                          view-name: states
                        country:
                          id: 100
                          identifier: United States
                          view-name: countries
                      phone: "123"
                      isActive: true
  /pcn/tenants/{id}/activate:
    post:
      tags:
        - Tenant
      summary: Activate an inactive tenant
      parameters:
        - name: id
          in: path
          schema:
            oneOf:
              - type: string
              - type: integer
          required: true
          description: tenant integer id or tenant uuid
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: response message
                  tenant:
                    $ref: '#/components/schemas/Tenant'
        '304':
          description: tenant is active, no changes needed
          content:
            application/json: {}
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
  /pcn/tenants/{id}/deactivate:
    post:
      tags:
        - Tenant
      summary: Deactivate an active tenant
      parameters:
        - name: id
          in: path
          schema:
            oneOf:
              - type: string
              - type: integer
          required: true
          description: tenant integer id or tenant uuid
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: response message
                  tenant:
                    $ref: '#/components/schemas/Tenant'
        '304':
          description: tenant is not active, no changes needed
          content:
            application/json: {}
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
  /views/organizations:
    get:
      tags:
        - Tenant
      summary: Get organizations or tenant
      parameters:
        - name: $filter
          in: query
          schema:
            type: string
            default: value neq '0'
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                     "page-count": { type: integer }
                     "records-size": { type: integer }
                     "skip-records": { type: integer }
                     "row-count": { type: integer }
                     "array-count": { type: integer }
                     records:
                        type: array
                        items: { $ref: "#/components/schemas/Organization" }
               example:
                  page-count: 1
                  records-size: 100
                  skip-records: 0
                  row-count: 9
                  array-count: 0
                  records:
                    - id: 50001
                      uid: "8299bdd6-0628-485f-8305-58b483951be6"
                      tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                      value: Fertilizer
                      name: Fertilizer
                      description: Fertilizer
                      isSummary: false
                      isActive: true
                      model-name: ad_org
                      view-name: organizations
                      organizationInfo:
                        - id: 50001
                          uid: "f98fa343-592e-4ac1-86b0-741aad79513b"
                          address:
                            id: 200000
                            identifier: "Schillerstrabe 18d, D-47445 Munich"
                            address1: "Schillerstrabe 18d"
                            postal: "47445"
                            city: Munich
                            country:
                              id: 101
                              identifier: Germany
                              view-name: countries
                          isActive: true
                    - id: 50000
                      uid: "426dcbf1-5a47-474c-9bb7-c28f861eb34b"
                      tenant:
                          propertyLabel: Client
                          id: 11
                          identifier: GardenWorld
                          model-name: ad_client
                      value: Furniture
                      name: Furniture
                      description: Furniture
                      isSummary: false
                      isActive: true
                      model-name: ad_org
                      view-name: organizations
                      organizationInfo:
                        - id: 50000
                          uid: "419a5031-b410-48c0-a832-437ef53b59c1"
                          address:
                            id: 200001
                            identifier: "80 Rue Principale, F-75014 Paris"
                            address1: "80 Rue Principale"
                            postal: "75014"
                            city: Paris
                            country:
                              id: 102
                              identifier: France
                              view-name: countries
                          isActive: true
                  # ... (rest of the records would follow the same pattern)         
  /views/organizationInfo/{id}:
    get:
      tags:
        - Tenant
      summary: Get organizationInfo by id
      parameters:
        - name: $expand
          in: query
          schema:
            type: string
            default: ad_org_id
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: '{ad_org_id}'
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  $ref: '#/components/schemas/OrganizationInfo'
               example:
                  id: 50001
                  uid: "f98fa343-592e-4ac1-86b0-741aad79513b"
                  address:
                    id: 200000
                    identifier: "Schillerstrabe 18d, D-47445 Munich"
                    address1: "Schillerstrabe 18d"
                    postal: "47445"
                    city: Munich
                    country:
                      id: 101
                      identifier: Germany
                      view-name: countries
                  isActive: true
                  model-name: ad_orginfo
                  view-name: organizationInfo
                  organization:
                    id: 50001
                    uid: "8299bdd6-0628-485f-8305-58b483951be6"
                    tenant:
                      propertyLabel: Client
                      id: 11
                      identifier: GardenWorld
                      model-name: ad_client
                    value: Fertilizer
                    name: Fertilizer
                    description: Fertilizer
                    isSummary: false
                    isActive: true
                    model-name: ad_org
                    view-name: organizations
    put:
      tags:
        - Tenant
      summary: Update organization info (address, logo, etc) by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInfo'
            examples:
              updateLogo:
                summary: update organization logo
                value:
                  logo:
                    file_name: logo.png
                    data: '{{base64EncodedLogoData}}'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: '{ad_org_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/OrganizationInfo" }
  /views/states:
    get:
      tags:
        - Tenant
      summary: Get US states
      parameters:
        - name: $filter
          in: query
          schema:
            type: string
            default: c_country_id eq 100
          description: Country(US) filter          
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                   page-count:
                     type: integer
                     example: 1
                   records-size:
                     type: integer
                     example: 100
                   skip-records:
                     type: integer
                     example: 0
                   row-count:
                     type: integer
                     example: 51
                   array-count:
                     type: integer
                     example: 0
                   records:
                     type: array
                     items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 118
                          uid:
                            type: string
                            format: uuid
                            example: "b0a4f150-39d4-4f9f-b7ef-004df1c48915"
                          C_Country_ID:
                            type: object
                            properties:
                              propertyLabel:
                                type: string
                                example: "Country"
                              id:
                                type: integer
                                example: 100
                              identifier:
                                type: string
                                example: "United States"
                              model-name:
                                type: string
                                example: "c_country"
                          name:
                            type: string
                            example: "AK"
                          description:
                            type: string
                            example: "Alaska"
                          isActive:
                            type: boolean
                            example: true
                          model-name:
                            type: string
                            example: "c_region"
                          view-name:
                            type: string
                            example: "states"
               example:
                  page-count: 1
                  records-size: 100
                  skip-records: 0
                  row-count: 51
                  array-count: 0
                  records:
                   - id: 118
                     uid: "b0a4f150-39d4-4f9f-b7ef-004df1c48915"
                     C_Country_ID:
                       propertyLabel: "Country"
                       id: 100
                       identifier: "United States"
                       model-name: "c_country"
                     name: "AK"
                     description: "Alaska"
                     isActive: true
                     model-name: "c_region"
                     view-name: "states"
                   - id: 114
                     uid: "92a41c8a-f616-4d33-9534-e2a81e8b44d4"
                     C_Country_ID:
                       propertyLabel: "Country"
                       id: 100
                       identifier: "United States"
                       model-name: "c_country"
                     name: "AL"
                     description: "Alabama"
                     isActive: true
                     model-name: "c_region"
                     view-name: "states"
                   # ... (rest of the records)
                   - id: 140
                     uid: "ca73482d-012c-4a99-ab62-3632739d3fb1"
                     C_Country_ID:
                       propertyLabel: "Country"
                       id: 100
                       identifier: "United States"
                       model-name: "c_country"
                     name: "WY"
                     description: "Wyoming"
                     isActive: true
                     model-name: "c_region"
                     view-name: "states"
  /views/countries:
    get:
      tags:
        - Tenant
      summary: Get countries
      parameters:
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                   page-count:
                     type: integer
                     example: 3
                   records-size:
                     type: integer
                     example: 100
                   skip-records:
                     type: integer
                     example: 0
                   row-count:
                     type: integer
                     example: 250
                   array-count:
                     type: integer
                     example: 0
                   records:
                     type: array
                     items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 243
                          uid:
                            type: string
                            format: uuid
                            example: "cebf6f35-81f8-4904-a4dd-6037ef1fbfd8"
                          countryCode:
                            type: string
                            example: "MQ"
                          name:
                            type: string
                            example: "Martinique"
                          description:
                            type: string
                            example: "Martinique"
                          C_Currency_ID:
                            type: object
                            properties:
                              propertyLabel:
                                type: string
                                example: "Currency"
                              id:
                                type: integer
                                example: 102
                              identifier:
                                type: string
                                example: "EUR"
                              model-name:
                                type: string
                                example: "c_currency"
                          isActive:
                            type: boolean
                            example: true
                          model-name:
                            type: string
                            example: "c_country"
                          view-name:
                            type: string
                            example: "countries"
               example:
                  page-count: 3
                  records-size: 100
                  skip-records: 0
                  row-count: 250
                  array-count: 0
                  records:
                   - id: 243
                     uid: "cebf6f35-81f8-4904-a4dd-6037ef1fbfd8"
                     countryCode: "MQ"
                     name: "Martinique"
                     description: "Martinique"
                     C_Currency_ID:
                       propertyLabel: "Currency"
                       id: 102
                       identifier: "EUR"
                       model-name: "c_currency"
                     isActive: true
                     model-name: "c_country"
                     view-name: "countries"
                   - id: 246
                     uid: "0196312e-4a64-46cc-beee-6f5e61316a02"
                     countryCode: "YT"
                     name: "Mayotte"
                     description: "Mayotte"
                     C_Currency_ID:
                       propertyLabel: "Currency"
                       id: 102
                       identifier: "EUR"
                       model-name: "c_currency"
                     isActive: true
                     model-name: "c_country"
                     view-name: "countries"
                   - id: 279
                     uid: "02427462-a5b9-402f-82d7-6d4665bf1cb6"
                     countryCode: "PN"
                     name: "Pitcairn"
                     description: "Pitcairn"
                     C_Currency_ID:
                       propertyLabel: "Currency"
                       id: 102
                       identifier: "EUR"
                       model-name: "c_currency"
                     isActive: true
                     model-name: "c_country"
                     view-name: "countries"
  /pcn/timezones:
    get:
      tags:
        - Tenant
      summary: Get timezones by id or name
      parameters:
        - name: $startWith
          in: query
          schema:
            type: string
          description: name or id start with filter. For e.g, timezone with name or id that start with UTC+08
          example: utc%2B08
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema:
                  type: object
                  properties:
                   timezones:
                     type: array
                     items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: timezone id
                            example: "Antarctica/Casey"
                          name:
                            type: string
                            description: timezone name
                            example: "UTC+08:00 Antarctica/Casey"
               example:
                 timezones:
                   - id: "Antarctica/Casey"
                     name: "UTC+08:00 Antarctica/Casey"
                   - id: "Asia/Brunei"
                     name: "UTC+08:00 Asia/Brunei"
                   - id: "Asia/Choibalsan"
                     name: "UTC+08:00 Asia/Choibalsan"
                   - id: "Asia/Chongqing"
                     name: "UTC+08:00 Asia/Chongqing"
                   - id: "Asia/Chungking"
                     name: "UTC+08:00 Asia/Chungking"
                   - id: "Asia/Harbin"
                     name: "UTC+08:00 Asia/Harbin"
                   - id: "Asia/Hong_Kong"
                     name: "UTC+08:00 Asia/Hong_Kong"
                   - id: "Asia/Irkutsk"
                     name: "UTC+08:00 Asia/Irkutsk"
                   - id: "Asia/Kuala_Lumpur"
                     name: "UTC+08:00 Asia/Kuala_Lumpur"
                   - id: "Asia/Kuching"
                     name: "UTC+08:00 Asia/Kuching"
                   - id: "Asia/Macao"
                     name: "UTC+08:00 Asia/Macao"
                   - id: "Asia/Macau"
                     name: "UTC+08:00 Asia/Macau"
                   - id: "Asia/Makassar"
                     name: "UTC+08:00 Asia/Makassar"
                   - id: "Asia/Manila"
                     name: "UTC+08:00 Asia/Manila"
                   - id: "Asia/Shanghai"
                     name: "UTC+08:00 Asia/Shanghai"
                   - id: "Asia/Singapore"
                     name: "UTC+08:00 Asia/Singapore"
                   - id: "Asia/Taipei"
                     name: "UTC+08:00 Asia/Taipei"
                   - id: "Asia/Ujung_Pandang"
                     name: "UTC+08:00 Asia/Ujung_Pandang"
                   - id: "Asia/Ulaanbaatar"
                     name: "UTC+08:00 Asia/Ulaanbaatar"
                   - id: "Asia/Ulan_Bator"
                     name: "UTC+08:00 Asia/Ulan_Bator"
                   - id: "Australia/Perth"
                     name: "UTC+08:00 Australia/Perth"
                   - id: "Australia/West"
                     name: "UTC+08:00 Australia/West"
                   - id: "Australia/Eucla"
                     name: "UTC+08:45 Australia/Eucla"
  /views/tenants/{id}:
    put:
      tags:
        - Tenant
      summary: Update tenant by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
            examples:
              updateTenantDescription:
                summary: Update tenant description
                value:
                  description: Updated Descriptions
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: '{ad_client_id}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
               schema: { $ref: "#/components/schemas/Tenant" }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
  /pcn/assets/{id}:
    get:
      tags:
        - Assets
      summary: Get asset by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assets' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Assets
      summary: Update asset by id
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assets' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assets' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Assets
      summary: Delete asset by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/assets:
    get:
      tags:
        - Assets
      summary: Get all asset records of the asset records that match the $filter criteria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/assets' }
    post:
      tags:
        - Assets
      summary: Create asset record
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assets' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assets' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/assets/delete:
    post:
      tags:
        - Assets
      summary: Delete multiple asset records by id
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  ids:
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: integer
                          description: id of asset to delete
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    msg:
                      type: string
                      description: info or error message
                    status:
                      type: integer
                      description: response status from delete request
                    detail:
                      type: integer
                      description: asset id
  /pcn/assets/templates/{id}:
    get:
      tags:
        - Assets
      summary: Get asset template by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assetMetadataExtractionTemplates' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Assets
      summary: Update asset template by id
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assetMetadataExtractionTemplates' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assetMetadataExtractionTemplates' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Assets
      summary: Delete asset template by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/assets/templates:
    get:
      tags:
        - Assets
      summary: Get all asset template records that match the $filter criteria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/assetMetadataExtractionTemplates' }
    post:
      tags:
        - Assets
      summary: Create asset template record
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assetMetadataExtractionTemplates' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assetMetadataExtractionTemplates' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/assets/templates/delete:
    post:
      tags:
        - Assets
      summary: Delete multiple asset template records by id
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  ids:
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: integer
                          description: id of asset to delete
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    msg:
                      type: string
                      description: info or error message
                    status:
                      type: integer
                      description: response status from delete request
                    detail:
                      type: integer
                      description: asset id
  /views/assertionTypes/{id}:
    get:
      tags:
        - Evidence
      summary: Get assertion type by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assertionTypes' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Evidence
      summary: Update assertion type by id
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assertionTypes' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assertionTypes' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Evidence
      summary: Delete assertion type by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/assertionTypes:
    get:
      tags:
        - Evidence
      summary: Get all assertion type records of the assertion type records that match the $filter crieria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/assertionTypes' }
    post:
      tags:
        - Evidence
      summary: Create assertion type record
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assertionTypes' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assertionTypes' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/evidence/{id}:
    get:
      tags:
        - Evidence
      summary: Get evidence by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Evidence
      summary: Update evidence by id
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Evidence
      summary: Delete evidence by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/evidence:
    get:
      tags:
        - Evidence
      summary: Get all evidence records or the evidence records that match the $filter criteria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/evidence' }
    post:
      tags:
        - Evidence
      summary: Create evidence record
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/evidence:
    post:
      tags:
        - Evidence
      summary: Create evidence record
      requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/evidence'
                  - type: object
                    properties:
                      file:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          data:
                            type: string
                            format: byte
                        required:
                          - name
                          - data
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
        '400':
          description: Bad request response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
  /pcn/evidence/upload:
    post:
      tags:
        - Evidence
      summary: Upload evidence and asset record
      requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/evidence'
                  - type: object
                    properties:
                      file:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          data:
                            type: string
                            format: byte
                        required:
                          - name
                          - data
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evidence' }
        '400':
          description: Bad request response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }        
  /pcn/evidence/{id}/dataStatuses:
    get:
      tags:
        - Evidence
      summary: Get status of metadata extraction processes by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Record id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataStatuses:
                    type: array
                    items:
                      type: object
                      properties:
                        template:
                          description: metadata extraction template
                          type: object
                          properties:
                            propertyLabel: 
                              type: string
                              readOnly: true
                              enum:
                                 - 'Metadata Extraction Template'
                            id:
                              type: integer
                              description: record id
                            identifier:
                              type: string
                              description: record identifier
                            model-name:
                              type: string
                              readOnly: true
                              enum:
                                 - 'pcn_metadataextractiontemplate'
                        status: 
                          description: status of the record
                          type: object
                          properties:
                            propertyLabel: 
                              type: string
                              readOnly: true
                              enum:
                                 - 'Status'
                            id:
                              type: string
                              description: list item id
                              enum:
                                - 'CA'
                                - 'CO'
                                - 'IP'
                                - 'PE'
                                - 'TE'
                            identifier:
                              type: string
                              description: list item identifier
                              enum:
                                - 'Canceled'
                                - 'Completed'
                                - 'In Progress'
                                - 'Pending'
                                - 'Terminated'
                            model-name:
                              type: string
                              readOnly: true
                              enum:
                                 - 'ad_ref_list'
  /views/featureTypes:
    get:
      tags:
        - Metadata Extraction
      summary: Get feature types
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/featureTypes' }
  /views/assertionDataTypes:
    get:
      tags:
        - Metadata Extraction
      summary:  Get assertion data types
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/assertionDataTypes' }
  /views/resourceTypeFiles:
    get:
      tags:
        - Metadata Extraction
      summary: Get resource type files
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/resourceTypeFiles' }
  /views/metadataExtractionStatuses:
    get:
      tags:
        - Metadata Extraction
      summary:  Get assertion data types
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/metadataExtractionStatuses' }
  /pcn/metadataExtraction/templateTypes:
    get:
      tags:
        - Metadata Extraction
      summary: Get all metadata extraction template type records or the metadata extraction template type records that match the $filter criteria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/metadataExtractionTemplateTypes' }
    post:
      tags:
        - Metadata Extraction
      summary: Create metadata extraction template type record
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplateTypes' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplateTypes' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/metadataExtraction/templateTypes/{id}:
    get:
      tags:
        - Metadata Extraction
      summary: Get metadata extraction template type by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplateTypes' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Metadata Extraction
      summary: Update metadata extraction template type by id
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplateTypes' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplateTypes' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Metadata Extraction
      summary: Delete metadata extraction template type by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/metadataExtraction/templates:
    get:
      tags:
        - Metadata Extraction
      summary: Get all metadata extraction template records or the metadata extraction template records that match the $filter criteria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/metadataExtractionTemplates' }
    post:
      tags:
        - Metadata Extraction
      summary: Create metadata extraction template record
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplates' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplates' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/metadataExtraction/templates/{id}:
    get:
      tags:
        - Metadata Extraction
      summary: Get metadata extraction template by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplates' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Metadata Extraction
      summary: Update metadata extraction template by id
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplates' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/metadataExtractionTemplates' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Metadata Extraction
      summary: Delete metadata extraction template by id
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/metadataExtraction/templates/import:
    post:
      tags:
        - Metadata Extraction
      summary: Run metadata extraction template CSV import process
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fileData:
                  type: string
                  description: base64 encoded CSV content
                runAsJob:
                  type: boolean
                  description: true if run as a job
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /pcn/metadataExtraction/templates/import/{id}:
    get:
      tags:
        - Metadata Extraction
      summary: Get metadata extraction template CSV import process instance by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Record id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /pcn/metadataExtraction:
    post:
      tags:
        - Metadata Extraction
      summary: Run metadata extraction process
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                providerName:
                  type: string
                  description: provider name
                accessKey:
                  type: string
                  description: access key
                secretKey:
                  type: string
                  description: secret key
                sessionToken:
                  type: string
                  description: session token
                templateId:
                  type: string
                  description: metadata extraction template record id
                assetId:
                  type: string
                  description: asset record id
                fileName:
                  type: string
                  description: name of file, must include file extension
                fileData:
                  type: string
                  description: base64 encoded content to store as attachment
                runAsJob:
                  type: boolean
                  description: true if run as a job
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /pcn/metadataExtraction/{id}:
    get:
      tags:
        - Metadata Extraction
      summary: Get metadata extraction process instance by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Record id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /pcn/metadataExtraction/{id}/status:
    get:
      tags:
        - Metadata Extraction
      summary: Get status of metadata extraction process by process instance id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Record id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    description: status of the record
                    type: object
                    properties:
                      propertyLabel: 
                        type: string
                        readOnly: true
                        enum:
                           - 'Status'
                      id:
                        type: string
                        description: list item id
                        enum:
                          - 'CA'
                          - 'CO'
                          - 'IP'
                          - 'PE'
                          - 'TE'
                      identifier:
                        type: string
                        description: list item identifier
                        enum:
                          - 'Canceled'
                          - 'Completed'
                          - 'In Progress'
                          - 'Pending'
                          - 'Terminated'
                      model-name:
                        type: string
                        readOnly: true
                        enum:
                           - 'ad_ref_list'
  /pcn/metadataExtraction/{id}/cancel:
    post:
      tags:
        - Metadata Extraction
      summary: Update status of metadata extraction process to 'Canceled' by process instance id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Record id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    description: status of the record
                    type: object
                    properties:
                      propertyLabel: 
                        type: string
                        readOnly: true
                        enum:
                           - 'Status'
                      id:
                        type: string
                        description: list item id
                        enum:
                          - 'CA'
                          - 'CO'
                          - 'IP'
                          - 'PE'
                          - 'TE'
                      identifier:
                        type: string
                        description: list item identifier
                        enum:
                          - 'Canceled'
                          - 'Completed'
                          - 'In Progress'
                          - 'Pending'
                          - 'Terminated'
                      model-name:
                        type: string
                        readOnly: true
                        enum:
                           - 'ad_ref_list'
  /pcn/metadataExtraction/results:
    get:
      tags:
        - Metadata Extraction
      summary: Get all metadata extraction result records that match the $filter criteria parameter
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/metadataExtractionResults' }
  /pcn/metadataExtraction/credentials:
    post:
      tags:
        - Metadata Extraction
      summary: Add metadata extraction credential  
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessKey:
                  type: string
                  description: access key
                secretKey:
                  type: string
                  description: secret key
                sessionToken:
                  type: string
                  description: session token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Added'
  /pcn/metadataExtraction/credentials/remove:
    delete:
      tags:
        - Metadata Extraction
      summary: Remove metadata extraction credential
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Removed'
  /views/requirements/{id}:
    get:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirements' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirements' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirements' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirements:
    get:
      tags:
        - Requirement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/requirements' }
    post:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirements' }
              examples:
                DOMO74:
                  summary: Create a requirement for "FastCo Nurse Competency Certification"
                  value:
                    name: "FastCo Nurse Competency Certification 1"
                    description: "This is a requirement for a passing score on a nurse competency examination"
                    requirementCategory:
                      id: "INDUSTRY"
                    rules:
                      - name: "Legal Name Match"
                        description: "Ceritficate provided is issued in the legal name of the nurse candidate"
                        assertionType:
                          identifier: "Certification"
                        syntax: "{EVIDENCE}.data.legal_name == {APPLICANT}.legal_name"
                        criteria:
                          scope: "A"
                      - name: "Passing Score"
                        description: "Certificate provided has a score higher then 80%"
                        assertionType:
                          identifier: "Certification"
                        syntax: "{EVIDENCE}.data.overall_score >= 80"
                        reference: "com.fastco.certifications.commpentencey.passing-score"
                        criteria:
                          scope: "A"
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirements' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/rules/{id}:
    get:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/rules' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/rules' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/rules' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/rules:
    get:
      tags:
        - Requirement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/rules' }
    post:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/rules' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/rules' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirementGroups/{id}:
    get:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroups' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroups' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroups' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirementGroups:
    get:
      tags:
        - Requirement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/requirementGroups' }
    post:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroups' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroups' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirementGroupLines/{id}:
    get:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroupLines' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroupLines' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroupLines' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Requirement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirementGroupLines:
    get:
      tags:
        - Requirement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/requirementGroupLines' }
    post:
      tags:
        - Requirement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroupLines' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementGroupLines' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claims:
    get:
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/claims' }
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claims' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claims' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claims/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claims' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claims' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claims' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimAssertions/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimAssertions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimAssertions' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimAssertions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimAssertions:
    get:
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/claimAssertions' }
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimAssertions' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimAssertions' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirementsSatisfied/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementsSatisfied' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/requirementsSatisfied:
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementsSatisfied' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/requirementsSatisfied' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimGroups/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroups' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroups' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroups' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimGroups:
    get:
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/claimGroups' }
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroups' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroups' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimGroupLines/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupLines' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupLines' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupLines' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimGroupLines:
    get:
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/claimGroupLines' }
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupLines' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupLines' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/groupRequirementsSatisfied/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/groupRequirementsSatisfied' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/groupRequirementsSatisfied:
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/groupRequirementsSatisfied' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/groupRequirementsSatisfied' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimGroupEvaluations/{id}:
    get:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupEvaluations' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Claim
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/claimGroupEvaluations:
    post:
      tags:
        - Claim
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupEvaluations' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/claimGroupEvaluations' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/assessments/{id}:
    get:
      tags:
        - Assessment
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assessments' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Assessment
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assessments' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assessments' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Assessment
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/assessments:
    get:
      tags:
        - Assessment
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/assessments' }
    post:
      tags:
        - Assessment
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assessments' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/assessments' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/evaluations/{id}:
    get:
      tags:
        - Evaluation
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evaluations' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Evaluation
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evaluations' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evaluations' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Evaluation
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/evaluations:
    get:
      tags:
        - Evaluation
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/evaluations' }
    post:
      tags:
        - Evaluation
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evaluations' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/evaluations' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }

  /views/consensus/{id}:
    get:
      tags:
        - Agreement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/consensus' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Agreement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/consensus' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/consensus' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Agreement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/consensus:
    get:
      tags:
        - Agreement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/consensus' }
    post:
      tags:
        - Agreement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/consensus' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/consensus' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/agreements/{id}:
    get:
      tags:
        - Agreement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/agreement' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Agreement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/agreement' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/agreement' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Agreement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/agreements:
    get:
      tags:
        - Agreement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/agreement' }
    post:
      tags:
        - Agreement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/agreement' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/agreement' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/proposals/{id}:
    get:
      tags:
        - Agreement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/proposal' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Agreement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/proposal' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/proposal' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Agreement
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/proposals:
    get:
      tags:
        - Agreement
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/proposal' }
    post:
      tags:
        - Agreement
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/proposal' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/proposal' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }

  /views/companyGroups/{id}:
    get:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companyGroups' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/companyGroups:
    get:
      tags:
        - Company and Supplier
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/companyGroups' }
  /views/companies/{id}:
    get:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companies' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companies' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companies' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/companies:
    get:
      tags:
        - Company and Supplier
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/companies' }
    post:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companies' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companies' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/companySuppliers/{id}:
    get:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companySuppliers' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companySuppliers' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companySuppliers' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/companySuppliers:
    get:
      tags:
        - Company and Supplier
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/companySuppliers' }
    post:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companySuppliers' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companySuppliers' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/companyUsers/{id}:
    get:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companyUsers' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companyUsers' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companyUsers' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/companyUsers:
    get:
      tags:
        - Company and Supplier
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/companyUsers' }
    post:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companyUsers' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/companyUsers' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/userSearchResults/{id}:
    get:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/userSearchResults' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/userSearchResults' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/userSearchResults' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Company and Supplier
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/userSearchResults:
    get:
      tags:
        - Company and Supplier
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/userSearchResults' }
    post:
      tags:
        - Company and Supplier
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/userSearchResults' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/userSearchResults' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/launchVehicles/{id}:
    get:
      tags:
        - Launch Vehicle
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/launchVehicles' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Launch Vehicle
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/launchVehicles' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/launchVehicles' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Launch Vehicle
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/launchVehicles:
    get:
      tags:
        - Launch Vehicle
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/launchVehicles' }
    post:
      tags:
        - Launch Vehicle
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/launchVehicles' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/launchVehicles' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/missionStatuses:
    get:
      tags:
        - Mission
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/missionStatuses' }
  /views/missions/{id}:
    get:
      tags:
        - Mission
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Mission
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missions' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Mission
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/missions:
    get:
      tags:
        - Mission
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/missions' }
    post:
      tags:
        - Mission
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missions' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missions' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/missionEvaluationScores/{id}:
    get:
      tags:
        - Mission
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionEvaluationScores' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Mission
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionEvaluationScores' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionEvaluationScores' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Mission
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/missionEvaluationScores:
    get:
      tags:
        - Mission
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/missionEvaluationScores' }
    post:
      tags:
        - Mission
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionEvaluationScores' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionEvaluationScores' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/contractTypes/{id}:
    get:
      tags:
        - Contract
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contractTypes' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Contract
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contractTypes' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contractTypes' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Contract
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/contractTypes:
    get:
      tags:
        - Contract
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/contractTypes' }
    post:
      tags:
        - Contract
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contractTypes' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contractTypes' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/contracts/{id}:
    get:
      tags:
        - Contract
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contracts' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Contract
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contracts' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contracts' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Contract
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/contracts:
    get:
      tags:
        - Contract
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/contracts' }
    post:
      tags:
        - Contract
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contracts' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/contracts' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/missionContracts/{id}:
    get:
      tags:
        - Contract
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionContracts' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Contract
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionContracts' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionContracts' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Contract
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/missionContracts:
    get:
      tags:
        - Contract
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/missionContracts' }
    post:
      tags:
        - Contract
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionContracts' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/missionContracts' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  
  /views/criterionCategories/{id}:
    get:
      tags:
        - Criterion
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterionCategories' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Criterion
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterionCategories' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterionCategories' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Criterion
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/criterionCategories:
    get:
      tags:
        - Criterion
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/criterionCategories' }
    post:
      tags:
        - Criterion
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterionCategories' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterionCategories' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/criterionRequirements:
    get:
      tags:
        - Criterion
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/criterionRequirements' }
  /views/criterion/{id}:
    get:
      tags:
        - Criterion
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterion' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Criterion
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterion' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterion' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Criterion
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/criterion:
    get:
      tags:
        - Criterion
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/criterion' }
    post:
      tags:
        - Criterion
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterion' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/criterion' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/standards/{id}:
    get:
      tags:
        - Standard
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standards' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Standard
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standards' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standards' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Standard
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/standards:
    get:
      tags:
        - Standard
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/standards' }
    post:
      tags:
        - Standard
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standards' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standards' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/standardRevisionStatuses:
    get:
      tags:
        - Standard
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/standardRevisionStatuses' }
  /views/standardRevisions/{id}:
    get:
      tags:
        - Standard
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Standard
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisions' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Standard
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/standardRevisions:
    get:
      tags:
        - Standard
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/standardRevisions' }
    post:
      tags:
        - Standard
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisions' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisions' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/standardRevisionCriterions/{id}:
    get:
      tags:
        - Standard
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisionCriterions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    put:
      tags:
        - Standard
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisionCriterions' }
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisionCriterions' }
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
    delete:
      tags:
        - Standard
      parameters:
        - name: id
          in: path
          schema:
            oneOf: 
              - type: string
              - type: integer
          required: true
          description: integer record id or string record uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    description: info or error message
                    example: 'Deleted'
        '404':
          description: Not found response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /views/standardRevisionCriterions:
    get:
      tags:
        - Standard
      parameters:
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/orderby'
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page-count:
                    type: integer
                    description: number of page
                  records-size:
                    type: integer
                    description: number of records per page
                  skip-records:
                    type: integer
                  row-count:
                    type: integer
                    description: total number of records
                  array-count:
                    type: integer
                  records:
                    type: array
                    items: { $ref: '#/components/schemas/standardRevisionCriterions' }
    post:
      tags:
        - Standard
      requestBody:
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisionCriterions' }
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/standardRevisionCriterions' }
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/ai-tools/prompts:
    post:
      tags:
        - AI
      description: Query the AI tool with a prompt text and optional files
      parameters:
        - name: X-AI-Tool
          in: header
          schema:
            type: string
          required: false
          description: AI tool name (AskSage or Gemini)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prompt_with_files"
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/ai-tools/conversations:
    post:
      tags:
       - AI
      description: Continue conversations with AI tool with conversation histories, new prompt text and optional files
      parameters:
        - name: X-AI-Tool
          in: header
          schema:
            type: string
          required: false
          description: AI tool name (AskSage or Gemini)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                histories:
                  type: array
                  items:
                    type: object
                    properties:
                      conversationId:
                        type: string
                        description: unique conversation id
                      request:
                        $ref: "#/components/schemas/prompt_with_files"
                      response:
                        type: string
                        description: response from ai tool
                request:
                  $ref: "#/components/schemas/prompt_with_files"
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/ai-services/contract-evaluations:
    post:
      tags:
        - AI
      description: Create new evaluation for a contract with optional files
      parameters:
        - name: X-Callback-URL
          in: header
          schema:
            type: string
          required: false
          description: optional callback url
        - name: X-Callback-Token
          in: header
          schema:
            type: string
          required: false
          description: optional bearer token for X-Callback-URL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Evaluation name
                description:
                  type: string
                  description: Evaluation description
                aiTool:
                  type: string
                  description: AI tool name (AskSage or Gemini)
                standardRevisionIds:
                  type: array
                  items:
                    type: integer
                  description: list of standard revision ids
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_resource'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pnc/ai-services/evaluations/{id}/followup:
    post:
      tags:
        - AI
      description: Follow up on an existing evaluation with a new prompt text
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Evaluation Id
        - name: X-Callback-URL
          in: header
          schema:
            type: string
          required: false
          description: optional callback url
        - name: X-Callback-Token
          in: header
          schema:
            type: string
          required: false
          description: optional bearer token for X-Callback-URL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: follow up prompt
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_resource'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pnc/ai-services/evaluations/{id}:
    get:
      tags:
        - AI
      description: Get the evaluation details and last response
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Evaluation Id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Evaluation Id
                  name:
                    type: string
                    description: Evaluation name
                  ai_tool:
                    type: string
                    description: AI tool name
                  status:
                    type: string
                    description: Evaluation status
                    enum:
                      - QUEUED
                      - RUNNING
                      - FINISHED
                      - COMPLETE
                  duration:
                    type: string
                    description: duration of this evaluation in hours, minutes and seconds
                  response:
                    oneOf:
                      - type: object
                      - type: array
                        items:
                          type: object
                          properties:
                            ai_result_id:
                              type: string
                              description: result id`
                            criteria:
                              type: string
                              description: criteria for evaluation
                            details:
                              type: string
                              description: details for rating
                            rating:
                              type: string
                              enum:
                                - SATISFACTORY
                                - UNSATISFACTORY
                                - NOT_APPLICABLE
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pnc/ai-services/evaluations/{id}/conversations:
    get:
      tags:
        - AI
      description: Get the evaluation details and full conversations
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Evaluation Id
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Evaluation Id
                  name:
                    type: string
                    description: Evaluation name
                  ai_tool:
                    type: string
                    description: AI tool name
                  status:
                    type: string
                    description: Evaluation status
                    enum:
                      - QUEUED
                      - RUNNING
                      - FINISHED
                      - COMPLETE
                  conversations:
                    type: array
                    items:
                      type: object
                      properties:
                        criterias:
                          type: array
                          items:
                            type: object
                            properties:
                              ai_result_id:
                                type: string
                                description: result id
                              criteria:
                                type: string
                                description: evaluation criteria
                        prompt:
                          type: string
                          description: request prompt text
                        files:
                          type: array
                          items:
                            $ref: '#/components/schemas/file_resource'
                        response:
                          oneOf:
                            - type: object
                            - type: array
                              items:
                                type: object
                                properties:
                                  ai_result_id:
                                    type: string
                                    description: result id`
                                  criteria:
                                    type: string
                                    description: criteria for evaluation
                                  details:
                                    type: string
                                    description: details for rating
                                  rating:
                                    type: string
                                    enum:
                                      - SATISFACTORY
                                      - UNSATISFACTORY
                                      - NOT_APPLICABLE
                        duration:
                          type: string
                          description: duration of this evaluation in hours, minutes and seconds
  /pnc/ai-services/evaluations/{id}/complete:
    post:
      tags:
        - AI
      description: Complete an ongoing evaluation by evaluation id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Evaluation Id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/ai-services/standard-revisions:
    post:
      tags:
        - AI
      description: Create a new standard and standard revision from an Excel input file
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: true
          description: standard name
        - name: fileName
          in: query
          schema:
            type: string
          required: false
          description: optional source file name
        - name: url
          in: query
          schema:
            type: string
          required: false
          description: optional source url
        - name: version
          in: query
          schema:
            type: string
          required: true
          description: standard revision version
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
          application/vnd.ms-excel:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  standardRevisionId:
                    type: string
                    description: standard revision id
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/ai-services/event-queue/messages:
    get:
      tags:
        - AI
      description: Get last 10 event queue messages for an AI tool
      parameters:
        - name: ai-tool
          in: query
          schema:
            type: string
          required: true
          description: AI tool name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  receiptHandle:
                    type: string
                    description: unique message id
                  message:
                    oneOf:
                      - type: string
                      - type: object
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
  /pcn/ai-services/event-queue/messages/{messageId}:
    delete:
      tags:
        - AI
      description: Delete a message from the AI tool event queue
      parameters:
        - name: ai-tool
          in: query
          schema:
            type: string
          required: true
          description: AI tool name
        - name: messageId
          in: path
          schema:
            type: string
          required: true
          description: message id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '500':
          description: Error response
          content:
            application/json:
              schema: { $ref: '#/components/schemas/errorResponse' }
